A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN arithmetic.OBJ
ASSEMBLER INVOKED BY: C:\myprog\Keil\C51\BIN\A51.EXE arithmetic.src PR(.\arithmetic.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\arithmetic.SRC generated from: arithmetic.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\myprog\Keil\C51\BIN\C51.EXE arithmetic.c BROWSE DEBUG OBJECTEXTEND TABS(2) SRC(
                             .\arithmetic.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    ARITHMETIC
                       8     
  0080                 9     P0      DATA    080H
  0090                10     P1      DATA    090H
  00A0                11     P2      DATA    0A0H
  00B0                12     P3      DATA    0B0H
  00B4                13     T0      BIT     0B0H.4
  00D6                14     AC      BIT     0D0H.6
  00B5                15     T1      BIT     0B0H.5
  0090                16     T2      BIT     090H.0
  00AF                17     EA      BIT     0A8H.7
  00A8                18     IE      DATA    0A8H
  00CE                19     EXF2    BIT     0C8H.6
  00B7                20     RD      BIT     0B0H.7
  00AC                21     ES      BIT     0A8H.4
  00B8                22     IP      DATA    0B8H
  0098                23     RI      BIT     098H.0
  00B2                24     INT0    BIT     0B0H.2
  00D7                25     CY      BIT     0D0H.7
  0099                26     TI      BIT     098H.1
  00B3                27     INT1    BIT     0B0H.3
  00CB                28     RCAP2H  DATA    0CBH
  00BC                29     PS      BIT     0B8H.4
  0081                30     SP      DATA    081H
  0091                31     T2EX    BIT     090H.1
  00D2                32     OV      BIT     0D0H.2
  00CA                33     RCAP2L  DATA    0CAH
  00C9                34     C_T2    BIT     0C8H.1
  00B6                35     WR      BIT     0B0H.6
  00CD                36     RCLK    BIT     0C8H.5
  00CC                37     TCLK    BIT     0C8H.4
  0099                38     SBUF    DATA    099H
  0087                39     PCON    DATA    087H
  0098                40     SCON    DATA    098H
  0089                41     TMOD    DATA    089H
  0088                42     TCON    DATA    088H
  0089                43     IE0     BIT     088H.1
  008B                44     IE1     BIT     088H.3
  00F0                45     B       DATA    0F0H
  00C8                46     CP_RL2  BIT     0C8H.0
  00E0                47     ACC     DATA    0E0H
  00A9                48     ET0     BIT     0A8H.1
  00AB                49     ET1     BIT     0A8H.3
  008D                50     TF0     BIT     088H.5
  00AD                51     ET2     BIT     0A8H.5
  008F                52     TF1     BIT     088H.7
  00CF                53     TF2     BIT     0C8H.7
  009A                54     RB8     BIT     098H.2
  008C                55     TH0     DATA    08CH
  00A8                56     EX0     BIT     0A8H.0
  0088                57     IT0     BIT     088H.0
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     2

  008D                58     TH1     DATA    08DH
  009B                59     TB8     BIT     098H.3
  00AA                60     EX1     BIT     0A8H.2
  008A                61     IT1     BIT     088H.2
  00CD                62     TH2     DATA    0CDH
  00D0                63     P       BIT     0D0H.0
  009F                64     SM0     BIT     098H.7
  008A                65     TL0     DATA    08AH
  009E                66     SM1     BIT     098H.6
  008B                67     TL1     DATA    08BH
  009D                68     SM2     BIT     098H.5
  00CC                69     TL2     DATA    0CCH
  00B9                70     PT0     BIT     0B8H.1
  00BB                71     PT1     BIT     0B8H.3
  00D3                72     RS0     BIT     0D0H.3
  00BD                73     PT2     BIT     0B8H.5
  008C                74     TR0     BIT     088H.4
  00D4                75     RS1     BIT     0D0H.4
  008E                76     TR1     BIT     088H.6
  00CA                77     TR2     BIT     0C8H.2
  00B8                78     PX0     BIT     0B8H.0
  00BA                79     PX1     BIT     0B8H.2
  0083                80     DPH     DATA    083H
  0082                81     DPL     DATA    082H
  00CB                82     EXEN2   BIT     0C8H.3
  009C                83     REN     BIT     098H.4
  00C8                84     T2CON   DATA    0C8H
  00B0                85     RXD     BIT     0B0H.0
  00B1                86     TXD     BIT     0B0H.1
  00D5                87     F0      BIT     0D0H.5
  00D0                88     PSW     DATA    0D0H
                      89     ?PR?add_a_rn?ARITHMETIC                  SEGMENT CODE 
                      90     ?PR?add_a_di?ARITHMETIC                  SEGMENT CODE 
                      91     ?PR?add_a_ri?ARITHMETIC                  SEGMENT CODE 
                      92     ?PR?add_a_da?ARITHMETIC                  SEGMENT CODE 
                      93     ?PR?addc_a_rn?ARITHMETIC                 SEGMENT CODE 
                      94     ?PR?addc_a_di?ARITHMETIC                 SEGMENT CODE 
                      95     ?PR?addc_a_ri?ARITHMETIC                 SEGMENT CODE 
                      96     ?PR?addc_a_da?ARITHMETIC                 SEGMENT CODE 
                      97     ?PR?subb_a_rn?ARITHMETIC                 SEGMENT CODE 
                      98     ?PR?subb_a_di?ARITHMETIC                 SEGMENT CODE 
                      99     ?PR?subb_a_ri?ARITHMETIC                 SEGMENT CODE 
                     100     ?PR?subb_a_da?ARITHMETIC                 SEGMENT CODE 
                     101     ?PR?inc_a?ARITHMETIC SEGMENT CODE 
                     102     ?PR?inc_rn?ARITHMETIC                    SEGMENT CODE 
                     103     ?PR?inc_di?ARITHMETIC                    SEGMENT CODE 
                     104     ?PR?inc_ri?ARITHMETIC                    SEGMENT CODE 
                     105     ?PR?inc_dp?ARITHMETIC                    SEGMENT CODE 
                     106     ?PR?dec_a?ARITHMETIC SEGMENT CODE 
                     107     ?PR?dec_rn?ARITHMETIC                    SEGMENT CODE 
                     108     ?PR?dec_di?ARITHMETIC                    SEGMENT CODE 
                     109     ?PR?dec_ri?ARITHMETIC                    SEGMENT CODE 
                     110     ?PR?mult?ARITHMETIC  SEGMENT CODE 
                     111     ?PR?divide?ARITHMETIC                    SEGMENT CODE 
                     112     ?PR?da_a?ARITHMETIC  SEGMENT CODE 
                     113     ?CO?ARITHMETIC       SEGMENT CODE 
                     114             EXTRN   CODE (_printf)
                     115             EXTRN   DATA (?_printf?BYTE)
                     116             EXTRN   CODE (error)
                     117             PUBLIC  da_a
                     118             PUBLIC  divide
                     119             PUBLIC  mult
                     120             PUBLIC  dec_ri
                     121             PUBLIC  dec_di
                     122             PUBLIC  dec_rn
                     123             PUBLIC  dec_a
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     3

                     124             PUBLIC  inc_dp
                     125             PUBLIC  inc_ri
                     126             PUBLIC  inc_di
                     127             PUBLIC  inc_rn
                     128             PUBLIC  inc_a
                     129             PUBLIC  subb_a_da
                     130             PUBLIC  subb_a_ri
                     131             PUBLIC  subb_a_di
                     132             PUBLIC  subb_a_rn
                     133             PUBLIC  addc_a_da
                     134             PUBLIC  addc_a_ri
                     135             PUBLIC  addc_a_di
                     136             PUBLIC  addc_a_rn
                     137             PUBLIC  add_a_da
                     138             PUBLIC  add_a_ri
                     139             PUBLIC  add_a_di
                     140             PUBLIC  add_a_rn
                     141     
----                 142             RSEG  ?CO?ARITHMETIC
0000                 143     ?SC_0:
0000 4144445F        144             DB  'A' ,'D' ,'D' ,'_' ,'A' ,'_' ,'R' ,'N' ,00AH,000H
0004 415F524E                
0008 0A00                    
                     145     
000A                 146     ?SC_10:
000A 4144445F        147             DB  'A' ,'D' ,'D' ,'_' ,'A' ,'_' ,'D' ,'I' ,00AH,000H
000E 415F4449                
0012 0A00                    
                     148     
0014                 149     ?SC_20:
0014 4144445F        150             DB  'A' ,'D' ,'D' ,'_' ,'A' ,'_' ,'R' ,'I' ,00AH,000H
0018 415F5249                
001C 0A00                    
                     151     
001E                 152     ?SC_30:
001E 4144445F        153             DB  'A' ,'D' ,'D' ,'_' ,'A' ,'_' ,'D' ,'A' ,00AH,000H
0022 415F4441                
0026 0A00                    
                     154     
0028                 155     ?SC_40:
0028 41444443        156             DB  'A' ,'D' ,'D' ,'C' ,'_' ,'A' ,'_' ,'R' ,'N' ,00AH
002C 5F415F52                
0030 4E0A                    
0032 00              157             DB  000H
                     158     
0033                 159     ?SC_51:
0033 41444443        160             DB  'A' ,'D' ,'D' ,'C' ,'_' ,'A' ,'_' ,'D' ,'I' ,00AH
0037 5F415F44                
003B 490A                    
003D 00              161             DB  000H
                     162     
003E                 163     ?SC_62:
003E 41444443        164             DB  'A' ,'D' ,'D' ,'C' ,'_' ,'A' ,'_' ,'R' ,'I' ,00AH
0042 5F415F52                
0046 490A                    
0048 00              165             DB  000H
                     166     
0049                 167     ?SC_73:
0049 41444443        168             DB  'A' ,'D' ,'D' ,'C' ,'_' ,'A' ,'_' ,'D' ,'A' ,00AH
004D 5F415F44                
0051 410A                    
0053 00              169             DB  000H
                     170     
0054                 171     ?SC_84:
0054 53554242        172             DB  'S' ,'U' ,'B' ,'B' ,'_' ,'A' ,'_' ,'R' ,'N' ,00AH
0058 5F415F52                
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     4

005C 4E0A                    
005E 00              173             DB  000H
                     174     
005F                 175     ?SC_95:
005F 53554242        176             DB  'S' ,'U' ,'B' ,'B' ,'_' ,'A' ,'_' ,'D' ,'I' ,00AH
0063 5F415F44                
0067 490A                    
0069 00              177             DB  000H
                     178     
006A                 179     ?SC_106:
006A 53554242        180             DB  'S' ,'U' ,'B' ,'B' ,'_' ,'A' ,'_' ,'R' ,'I' ,00AH
006E 5F415F52                
0072 490A                    
0074 00              181             DB  000H
                     182     
0075                 183     ?SC_117:
0075 53554242        184             DB  'S' ,'U' ,'B' ,'B' ,'_' ,'A' ,'_' ,'D' ,'A' ,00AH
0079 5F415F44                
007D 410A                    
007F 00              185             DB  000H
                     186     
0080                 187     ?SC_128:
0080 494E435F        188             DB  'I' ,'N' ,'C' ,'_' ,'A' ,00AH,000H
0084 410A00                  
                     189     
0087                 190     ?SC_135:
0087 494E435F        191             DB  'I' ,'N' ,'C' ,'_' ,'R' ,'N' ,00AH,000H
008B 524E0A00                
                     192     
008F                 193     ?SC_143:
008F 494E435F        194             DB  'I' ,'N' ,'C' ,'_' ,'D' ,'I' ,00AH,000H
0093 44490A00                
                     195     
0097                 196     ?SC_151:
0097 494E435F        197             DB  'I' ,'N' ,'C' ,'_' ,'R' ,'I' ,00AH,000H
009B 52490A00                
                     198     
009F                 199     ?SC_159:
009F 494E435F        200             DB  'I' ,'N' ,'C' ,'_' ,'D' ,'P' ,00AH,000H
00A3 44500A00                
                     201     
00A7                 202     ?SC_167:
00A7 4445435F        203             DB  'D' ,'E' ,'C' ,'_' ,'A' ,00AH,000H
00AB 410A00                  
                     204     
00AE                 205     ?SC_174:
00AE 4445435F        206             DB  'D' ,'E' ,'C' ,'_' ,'R' ,'N' ,00AH,000H
00B2 524E0A00                
                     207     
00B6                 208     ?SC_182:
00B6 4445435F        209             DB  'D' ,'E' ,'C' ,'_' ,'D' ,'I' ,00AH,000H
00BA 44490A00                
                     210     
00BE                 211     ?SC_190:
00BE 4445435F        212             DB  'D' ,'E' ,'C' ,'_' ,'R' ,'I' ,00AH,000H
00C2 52490A00                
                     213     
00C6                 214     ?SC_198:
00C6 4D554C54        215             DB  'M' ,'U' ,'L' ,'T' ,00AH,000H
00CA 0A00                    
                     216     
00CC                 217     ?SC_204:
00CC 44495649        218             DB  'D' ,'I' ,'V' ,'I' ,'D' ,'E' ,00AH,000H
00D0 44450A00                
                     219     
00D4                 220     ?SC_212:
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     5

00D4 44410A00        221             DB  'D' ,'A' ,00AH,000H
                     222     
                     223     ; #include <REG52.H>
                     224     ; #include <stdio.h> 
                     225     ; #include "instruction.h"
                     226     ; 
                     227     ; void add_a_rn(void) {
                     228     
----                 229             RSEG  ?PR?add_a_rn?ARITHMETIC
0000                 230     add_a_rn:
                     231             USING   0
                     232                             ; SOURCE LINE # 5
                     233     ;       printf("ADD_A_RN\n");
                     234                             ; SOURCE LINE # 6
0000 7BFF            235             MOV     R3,#0FFH
0002 7A00     F      236             MOV     R2,#HIGH (?SC_0)
0004 7900     F      237             MOV     R1,#LOW (?SC_0)
0006 120000   F      238             LCALL   _printf
                     239     ;       #pragma ASM  
                     240     ;       push psw
0009 C0D0            241               push psw
                     242     ;       push acc
000B C0E0            243               push acc
                     244     ;   mov  psw,#0H        
000D 75D000          245               mov  psw,#0H  
                     246     ;   setb rs0     
0010 D2D3            247               setb rs0     
                     248     ;       setb rs1        
0012 D2D4            249               setb rs1      
                     250     ;   #pragma ENDASM 
                     251     ;       
                     252     ;       #pragma ASM
                     253     ;       mov acc,#01H
0014 75E001          254               mov acc,#01H
                     255     ;       mov R0,#0fH
0017 780F            256               mov R0,#0fH
                     257     ;       add A,R0
0019 28              258               add A,R0
                     259     ;   #pragma ENDASM      
                     260     ;       if (ACC!=0x10) test_status = 0;
                     261                             ; SOURCE LINE # 20
001A 6410            262             XRL     A,#010H
001C 6005            263             JZ      ?C0001
001E 90007E          264             MOV     DPTR,#07EH
0021 E4              265             CLR     A
0022 F0              266             MOVX    @DPTR,A
0023                 267     ?C0001:
                     268     ;       if (AC!=1) test_status = 0;
                     269                             ; SOURCE LINE # 21
0023 20D605          270             JB      AC,?C0002
0026 90007E          271             MOV     DPTR,#07EH
0029 E4              272             CLR     A
002A F0              273             MOVX    @DPTR,A
002B                 274     ?C0002:
                     275     ;       if (OV!=0) test_status = 0;
                     276                             ; SOURCE LINE # 22
002B 30D205          277             JNB     OV,?C0003
002E 90007E          278             MOV     DPTR,#07EH
0031 E4              279             CLR     A
0032 F0              280             MOVX    @DPTR,A
0033                 281     ?C0003:
                     282     ;       if (CY!=0) test_status = 0;
                     283                             ; SOURCE LINE # 23
0033 30D705          284             JNB     CY,?C0004
0036 90007E          285             MOV     DPTR,#07EH
0039 E4              286             CLR     A
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     6

003A F0              287             MOVX    @DPTR,A
003B                 288     ?C0004:
                     289     ;       AC = 0;
                     290                             ; SOURCE LINE # 24
003B C2D6            291             CLR     AC
                     292     ;               
                     293     ;       #pragma ASM
                     294     ;       mov acc,#40H
003D 75E040          295               mov acc,#40H
                     296     ;       mov R1,#40H
0040 7940            297               mov R1,#40H
                     298     ;       add A,R1
0042 29              299               add A,R1
                     300     ;       #pragma ENDASM
                     301     ;       if (ACC!=0x80) test_status = 0;
                     302                             ; SOURCE LINE # 31
0043 6480            303             XRL     A,#080H
0045 6005            304             JZ      ?C0005
0047 90007E          305             MOV     DPTR,#07EH
004A E4              306             CLR     A
004B F0              307             MOVX    @DPTR,A
004C                 308     ?C0005:
                     309     ;       if (AC!=0) test_status = 0;
                     310                             ; SOURCE LINE # 32
004C 30D605          311             JNB     AC,?C0006
004F 90007E          312             MOV     DPTR,#07EH
0052 E4              313             CLR     A
0053 F0              314             MOVX    @DPTR,A
0054                 315     ?C0006:
                     316     ;       if (OV!=1) test_status = 0;
                     317                             ; SOURCE LINE # 33
0054 20D205          318             JB      OV,?C0007
0057 90007E          319             MOV     DPTR,#07EH
005A E4              320             CLR     A
005B F0              321             MOVX    @DPTR,A
005C                 322     ?C0007:
                     323     ;       if (CY!=0) test_status = 0;
                     324                             ; SOURCE LINE # 34
005C 30D705          325             JNB     CY,?C0008
005F 90007E          326             MOV     DPTR,#07EH
0062 E4              327             CLR     A
0063 F0              328             MOVX    @DPTR,A
0064                 329     ?C0008:
                     330     ;       OV = 0;
                     331                             ; SOURCE LINE # 35
0064 C2D2            332             CLR     OV
                     333     ; 
                     334     ;       
                     335     ;       #pragma ASM
                     336     ;   mov acc,#80H
0066 75E080          337               mov acc,#80H
                     338     ;       mov R2,#81H
0069 7A81            339               mov R2,#81H
                     340     ;       add A,R2
006B 2A              341               add A,R2
                     342     ;   #pragma ENDASM
                     343     ;       if (ACC!=0x01) test_status = 0;
                     344                             ; SOURCE LINE # 43
006C 6401            345             XRL     A,#01H
006E 6005            346             JZ      ?C0009
0070 90007E          347             MOV     DPTR,#07EH
0073 E4              348             CLR     A
0074 F0              349             MOVX    @DPTR,A
0075                 350     ?C0009:
                     351     ;       if (AC!=0) test_status = 0;
                     352                             ; SOURCE LINE # 44
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     7

0075 30D605          353             JNB     AC,?C0010
0078 90007E          354             MOV     DPTR,#07EH
007B E4              355             CLR     A
007C F0              356             MOVX    @DPTR,A
007D                 357     ?C0010:
                     358     ;       if (OV!=1) test_status = 0;
                     359                             ; SOURCE LINE # 45
007D 20D205          360             JB      OV,?C0011
0080 90007E          361             MOV     DPTR,#07EH
0083 E4              362             CLR     A
0084 F0              363             MOVX    @DPTR,A
0085                 364     ?C0011:
                     365     ;       if (CY!=1) test_status = 0;
                     366                             ; SOURCE LINE # 46
0085 20D705          367             JB      CY,?C0012
0088 90007E          368             MOV     DPTR,#07EH
008B E4              369             CLR     A
008C F0              370             MOVX    @DPTR,A
008D                 371     ?C0012:
                     372     ;       OV = 0;
                     373                             ; SOURCE LINE # 47
008D C2D2            374             CLR     OV
                     375     ;       CY = 0;
                     376                             ; SOURCE LINE # 48
008F C2D7            377             CLR     CY
                     378     ;       
                     379     ;       #pragma ASM
                     380     ;   mov acc,#0C0H
0091 75E0C0          381               mov acc,#0C0H
                     382     ;       mov R3,#0C2H
0094 7BC2            383               mov R3,#0C2H
                     384     ;       add A,R3
0096 2B              385               add A,R3
                     386     ;   #pragma ENDASM
                     387     ;       if (ACC!=0x82) test_status = 0;
                     388                             ; SOURCE LINE # 55
0097 6482            389             XRL     A,#082H
0099 6005            390             JZ      ?C0013
009B 90007E          391             MOV     DPTR,#07EH
009E E4              392             CLR     A
009F F0              393             MOVX    @DPTR,A
00A0                 394     ?C0013:
                     395     ;       if (AC!=0) test_status = 0;
                     396                             ; SOURCE LINE # 56
00A0 30D605          397             JNB     AC,?C0014
00A3 90007E          398             MOV     DPTR,#07EH
00A6 E4              399             CLR     A
00A7 F0              400             MOVX    @DPTR,A
00A8                 401     ?C0014:
                     402     ;       if (OV!=0) test_status = 0;
                     403                             ; SOURCE LINE # 57
00A8 30D205          404             JNB     OV,?C0015
00AB 90007E          405             MOV     DPTR,#07EH
00AE E4              406             CLR     A
00AF F0              407             MOVX    @DPTR,A
00B0                 408     ?C0015:
                     409     ;       if (CY!=1) test_status = 0;
                     410                             ; SOURCE LINE # 58
00B0 20D705          411             JB      CY,?C0016
00B3 90007E          412             MOV     DPTR,#07EH
00B6 E4              413             CLR     A
00B7 F0              414             MOVX    @DPTR,A
00B8                 415     ?C0016:
                     416     ;       CY = 0; 
                     417                             ; SOURCE LINE # 59
00B8 C2D7            418             CLR     CY
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     8

                     419     ;       
                     420     ;       #pragma ASM 
                     421     ;       pop acc
00BA D0E0            422               pop acc
                     423     ;   pop psw     
00BC D0D0            424               pop psw       
                     425     ;   #pragma ENDASM      
                     426     ;       error();
                     427                             ; SOURCE LINE # 65
00BE 020000   F      428             LJMP    error
                     429     ; END OF add_a_rn
                     430     
                     431     ; }
                     432     ; 
                     433     ; void add_a_di(void) {
                     434     
----                 435             RSEG  ?PR?add_a_di?ARITHMETIC
0000                 436     add_a_di:
                     437             USING   0
                     438                             ; SOURCE LINE # 68
                     439     ;       printf("ADD_A_DI\n");
                     440                             ; SOURCE LINE # 69
0000 7BFF            441             MOV     R3,#0FFH
0002 7A00     F      442             MOV     R2,#HIGH (?SC_10)
0004 7900     F      443             MOV     R1,#LOW (?SC_10)
0006 120000   F      444             LCALL   _printf
                     445     ;       #pragma ASM  
                     446     ;       push psw
0009 C0D0            447               push psw
                     448     ;       push acc
000B C0E0            449               push acc
                     450     ;   mov  psw,#0H        
000D 75D000          451               mov  psw,#0H  
                     452     ;   setb rs0     
0010 D2D3            453               setb rs0     
                     454     ;       setb rs1        
0012 D2D4            455               setb rs1      
                     456     ;   #pragma ENDASM 
                     457     ;       
                     458     ;       #pragma ASM
                     459     ;       mov acc,#01H
0014 75E001          460               mov acc,#01H
                     461     ;       mov R0,#0fH
0017 780F            462               mov R0,#0fH
                     463     ;       add A,0x18
0019 2518            464               add A,0x18
                     465     ;   #pragma ENDASM      
                     466     ;       if (ACC!=0x10) test_status = 0;
                     467                             ; SOURCE LINE # 83
001B 6410            468             XRL     A,#010H
001D 6005            469             JZ      ?C0018
001F 90007E          470             MOV     DPTR,#07EH
0022 E4              471             CLR     A
0023 F0              472             MOVX    @DPTR,A
0024                 473     ?C0018:
                     474     ;       if (AC!=1) test_status = 0;
                     475                             ; SOURCE LINE # 84
0024 20D605          476             JB      AC,?C0019
0027 90007E          477             MOV     DPTR,#07EH
002A E4              478             CLR     A
002B F0              479             MOVX    @DPTR,A
002C                 480     ?C0019:
                     481     ;       if (OV!=0) test_status = 0;
                     482                             ; SOURCE LINE # 85
002C 30D205          483             JNB     OV,?C0020
002F 90007E          484             MOV     DPTR,#07EH
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE     9

0032 E4              485             CLR     A
0033 F0              486             MOVX    @DPTR,A
0034                 487     ?C0020:
                     488     ;       if (CY!=0) test_status = 0;
                     489                             ; SOURCE LINE # 86
0034 30D705          490             JNB     CY,?C0021
0037 90007E          491             MOV     DPTR,#07EH
003A E4              492             CLR     A
003B F0              493             MOVX    @DPTR,A
003C                 494     ?C0021:
                     495     ;       AC = 0;
                     496                             ; SOURCE LINE # 87
003C C2D6            497             CLR     AC
                     498     ;               
                     499     ;       #pragma ASM
                     500     ;       mov acc,#40H
003E 75E040          501               mov acc,#40H
                     502     ;       mov R1,#40H
0041 7940            503               mov R1,#40H
                     504     ;       add A,0x19
0043 2519            505               add A,0x19
                     506     ;       #pragma ENDASM
                     507     ;       if (ACC!=0x80) test_status = 0;
                     508                             ; SOURCE LINE # 94
0045 6480            509             XRL     A,#080H
0047 6005            510             JZ      ?C0022
0049 90007E          511             MOV     DPTR,#07EH
004C E4              512             CLR     A
004D F0              513             MOVX    @DPTR,A
004E                 514     ?C0022:
                     515     ;       if (AC!=0) test_status = 0;
                     516                             ; SOURCE LINE # 95
004E 30D605          517             JNB     AC,?C0023
0051 90007E          518             MOV     DPTR,#07EH
0054 E4              519             CLR     A
0055 F0              520             MOVX    @DPTR,A
0056                 521     ?C0023:
                     522     ;       if (OV!=1) test_status = 0;
                     523                             ; SOURCE LINE # 96
0056 20D205          524             JB      OV,?C0024
0059 90007E          525             MOV     DPTR,#07EH
005C E4              526             CLR     A
005D F0              527             MOVX    @DPTR,A
005E                 528     ?C0024:
                     529     ;       if (CY!=0) test_status = 0;
                     530                             ; SOURCE LINE # 97
005E 30D705          531             JNB     CY,?C0025
0061 90007E          532             MOV     DPTR,#07EH
0064 E4              533             CLR     A
0065 F0              534             MOVX    @DPTR,A
0066                 535     ?C0025:
                     536     ;       OV = 0;
                     537                             ; SOURCE LINE # 98
0066 C2D2            538             CLR     OV
                     539     ; 
                     540     ;       
                     541     ;       #pragma ASM
                     542     ;   mov acc,#80H
0068 75E080          543               mov acc,#80H
                     544     ;       mov R2,#81H
006B 7A81            545               mov R2,#81H
                     546     ;       add A,0x1a
006D 251A            547               add A,0x1a
                     548     ;   #pragma ENDASM
                     549     ;       if (ACC!=0x01) test_status = 0;
                     550                             ; SOURCE LINE # 106
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    10

006F 6401            551             XRL     A,#01H
0071 6005            552             JZ      ?C0026
0073 90007E          553             MOV     DPTR,#07EH
0076 E4              554             CLR     A
0077 F0              555             MOVX    @DPTR,A
0078                 556     ?C0026:
                     557     ;       if (AC!=0) test_status = 0;
                     558                             ; SOURCE LINE # 107
0078 30D605          559             JNB     AC,?C0027
007B 90007E          560             MOV     DPTR,#07EH
007E E4              561             CLR     A
007F F0              562             MOVX    @DPTR,A
0080                 563     ?C0027:
                     564     ;       if (OV!=1) test_status = 0;
                     565                             ; SOURCE LINE # 108
0080 20D205          566             JB      OV,?C0028
0083 90007E          567             MOV     DPTR,#07EH
0086 E4              568             CLR     A
0087 F0              569             MOVX    @DPTR,A
0088                 570     ?C0028:
                     571     ;       if (CY!=1) test_status = 0;
                     572                             ; SOURCE LINE # 109
0088 20D705          573             JB      CY,?C0029
008B 90007E          574             MOV     DPTR,#07EH
008E E4              575             CLR     A
008F F0              576             MOVX    @DPTR,A
0090                 577     ?C0029:
                     578     ;       OV = 0;
                     579                             ; SOURCE LINE # 110
0090 C2D2            580             CLR     OV
                     581     ;       CY = 0;
                     582                             ; SOURCE LINE # 111
0092 C2D7            583             CLR     CY
                     584     ;       
                     585     ;       #pragma ASM
                     586     ;   mov acc,#0C0H
0094 75E0C0          587               mov acc,#0C0H
                     588     ;       mov R3,#0C2H
0097 7BC2            589               mov R3,#0C2H
                     590     ;       add A,0x1b
0099 251B            591               add A,0x1b
                     592     ;   #pragma ENDASM
                     593     ;       if (ACC!=0x82) test_status = 0;
                     594                             ; SOURCE LINE # 118
009B 6482            595             XRL     A,#082H
009D 6005            596             JZ      ?C0030
009F 90007E          597             MOV     DPTR,#07EH
00A2 E4              598             CLR     A
00A3 F0              599             MOVX    @DPTR,A
00A4                 600     ?C0030:
                     601     ;       if (AC!=0) test_status = 0;
                     602                             ; SOURCE LINE # 119
00A4 30D605          603             JNB     AC,?C0031
00A7 90007E          604             MOV     DPTR,#07EH
00AA E4              605             CLR     A
00AB F0              606             MOVX    @DPTR,A
00AC                 607     ?C0031:
                     608     ;       if (OV!=0) test_status = 0;
                     609                             ; SOURCE LINE # 120
00AC 30D205          610             JNB     OV,?C0032
00AF 90007E          611             MOV     DPTR,#07EH
00B2 E4              612             CLR     A
00B3 F0              613             MOVX    @DPTR,A
00B4                 614     ?C0032:
                     615     ;       if (CY!=1) test_status = 0;
                     616                             ; SOURCE LINE # 121
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    11

00B4 20D705          617             JB      CY,?C0033
00B7 90007E          618             MOV     DPTR,#07EH
00BA E4              619             CLR     A
00BB F0              620             MOVX    @DPTR,A
00BC                 621     ?C0033:
                     622     ;       CY = 0; 
                     623                             ; SOURCE LINE # 122
00BC C2D7            624             CLR     CY
                     625     ;       
                     626     ;       #pragma ASM 
                     627     ;       pop acc
00BE D0E0            628               pop acc
                     629     ;   pop psw     
00C0 D0D0            630               pop psw       
                     631     ;   #pragma ENDASM 
                     632     ;   error();    
                     633                             ; SOURCE LINE # 128
00C2 020000   F      634             LJMP    error
                     635     ; END OF add_a_di
                     636     
                     637     ; }
                     638     ; 
                     639     ; void add_a_ri(void) {
                     640     
----                 641             RSEG  ?PR?add_a_ri?ARITHMETIC
0000                 642     add_a_ri:
                     643             USING   0
                     644                             ; SOURCE LINE # 131
                     645     ;       printf("ADD_A_RI\n");
                     646                             ; SOURCE LINE # 132
0000 7BFF            647             MOV     R3,#0FFH
0002 7A00     F      648             MOV     R2,#HIGH (?SC_20)
0004 7900     F      649             MOV     R1,#LOW (?SC_20)
0006 120000   F      650             LCALL   _printf
                     651     ;       #pragma ASM  
                     652     ;       push psw
0009 C0D0            653               push psw
                     654     ;       push acc
000B C0E0            655               push acc
                     656     ;   mov  psw,#0H        
000D 75D000          657               mov  psw,#0H  
                     658     ;   setb rs0     
0010 D2D3            659               setb rs0     
                     660     ;       setb rs1        
0012 D2D4            661               setb rs1      
                     662     ;   #pragma ENDASM 
                     663     ;       
                     664     ;       #pragma ASM
                     665     ;       mov acc,#01H
0014 75E001          666               mov acc,#01H
                     667     ;       mov R2,#0fH
0017 7A0F            668               mov R2,#0fH
                     669     ;       mov R0,#1aH
0019 781A            670               mov R0,#1aH
                     671     ;       add A,@R0
001B 26              672               add A,@R0
                     673     ;   #pragma ENDASM      
                     674     ;       if (ACC!=0x10) test_status = 0;
                     675                             ; SOURCE LINE # 147
001C 6410            676             XRL     A,#010H
001E 6005            677             JZ      ?C0035
0020 90007E          678             MOV     DPTR,#07EH
0023 E4              679             CLR     A
0024 F0              680             MOVX    @DPTR,A
0025                 681     ?C0035:
                     682     ;       if (AC!=1) test_status = 0;
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    12

                     683                             ; SOURCE LINE # 148
0025 20D605          684             JB      AC,?C0036
0028 90007E          685             MOV     DPTR,#07EH
002B E4              686             CLR     A
002C F0              687             MOVX    @DPTR,A
002D                 688     ?C0036:
                     689     ;       if (OV!=0) test_status = 0;
                     690                             ; SOURCE LINE # 149
002D 30D205          691             JNB     OV,?C0037
0030 90007E          692             MOV     DPTR,#07EH
0033 E4              693             CLR     A
0034 F0              694             MOVX    @DPTR,A
0035                 695     ?C0037:
                     696     ;       if (CY!=0) test_status = 0;
                     697                             ; SOURCE LINE # 150
0035 30D705          698             JNB     CY,?C0038
0038 90007E          699             MOV     DPTR,#07EH
003B E4              700             CLR     A
003C F0              701             MOVX    @DPTR,A
003D                 702     ?C0038:
                     703     ;       AC = 0;
                     704                             ; SOURCE LINE # 151
003D C2D6            705             CLR     AC
                     706     ;               
                     707     ;       #pragma ASM
                     708     ;       mov acc,#40H
003F 75E040          709               mov acc,#40H
                     710     ;       mov R2,#40H
0042 7A40            711               mov R2,#40H
                     712     ;       mov R0,#1aH
0044 781A            713               mov R0,#1aH
                     714     ;       add A,@R0
0046 26              715               add A,@R0
                     716     ;       #pragma ENDASM
                     717     ;       if (ACC!=0x80) test_status = 0;
                     718                             ; SOURCE LINE # 159
0047 6480            719             XRL     A,#080H
0049 6005            720             JZ      ?C0039
004B 90007E          721             MOV     DPTR,#07EH
004E E4              722             CLR     A
004F F0              723             MOVX    @DPTR,A
0050                 724     ?C0039:
                     725     ;       if (AC!=0) test_status = 0;
                     726                             ; SOURCE LINE # 160
0050 30D605          727             JNB     AC,?C0040
0053 90007E          728             MOV     DPTR,#07EH
0056 E4              729             CLR     A
0057 F0              730             MOVX    @DPTR,A
0058                 731     ?C0040:
                     732     ;       if (OV!=1) test_status = 0;
                     733                             ; SOURCE LINE # 161
0058 20D205          734             JB      OV,?C0041
005B 90007E          735             MOV     DPTR,#07EH
005E E4              736             CLR     A
005F F0              737             MOVX    @DPTR,A
0060                 738     ?C0041:
                     739     ;       if (CY!=0) test_status = 0;
                     740                             ; SOURCE LINE # 162
0060 30D705          741             JNB     CY,?C0042
0063 90007E          742             MOV     DPTR,#07EH
0066 E4              743             CLR     A
0067 F0              744             MOVX    @DPTR,A
0068                 745     ?C0042:
                     746     ;       OV = 0;
                     747                             ; SOURCE LINE # 163
0068 C2D2            748             CLR     OV
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    13

                     749     ; 
                     750     ;       
                     751     ;       #pragma ASM
                     752     ;   mov acc,#80H
006A 75E080          753               mov acc,#80H
                     754     ;       mov R3,#81H
006D 7B81            755               mov R3,#81H
                     756     ;       mov R1,#1bH
006F 791B            757               mov R1,#1bH
                     758     ;       add A,@R1
0071 27              759               add A,@R1
                     760     ;   #pragma ENDASM
                     761     ;       if (ACC!=0x01) test_status = 0;
                     762                             ; SOURCE LINE # 172
0072 6401            763             XRL     A,#01H
0074 6005            764             JZ      ?C0043
0076 90007E          765             MOV     DPTR,#07EH
0079 E4              766             CLR     A
007A F0              767             MOVX    @DPTR,A
007B                 768     ?C0043:
                     769     ;       if (AC!=0) test_status = 0;
                     770                             ; SOURCE LINE # 173
007B 30D605          771             JNB     AC,?C0044
007E 90007E          772             MOV     DPTR,#07EH
0081 E4              773             CLR     A
0082 F0              774             MOVX    @DPTR,A
0083                 775     ?C0044:
                     776     ;       if (OV!=1) test_status = 0;
                     777                             ; SOURCE LINE # 174
0083 20D205          778             JB      OV,?C0045
0086 90007E          779             MOV     DPTR,#07EH
0089 E4              780             CLR     A
008A F0              781             MOVX    @DPTR,A
008B                 782     ?C0045:
                     783     ;       if (CY!=1) test_status = 0;
                     784                             ; SOURCE LINE # 175
008B 20D705          785             JB      CY,?C0046
008E 90007E          786             MOV     DPTR,#07EH
0091 E4              787             CLR     A
0092 F0              788             MOVX    @DPTR,A
0093                 789     ?C0046:
                     790     ;       OV = 0;
                     791                             ; SOURCE LINE # 176
0093 C2D2            792             CLR     OV
                     793     ;       CY = 0;
                     794                             ; SOURCE LINE # 177
0095 C2D7            795             CLR     CY
                     796     ;       
                     797     ;       #pragma ASM
                     798     ;   mov acc,#0C0H
0097 75E0C0          799               mov acc,#0C0H
                     800     ;       mov R3,#0C2H
009A 7BC2            801               mov R3,#0C2H
                     802     ;       mov R1,#1bH
009C 791B            803               mov R1,#1bH
                     804     ;       add A,@R1
009E 27              805               add A,@R1
                     806     ;   #pragma ENDASM
                     807     ;       if (ACC!=0x82) test_status = 0;
                     808                             ; SOURCE LINE # 185
009F 6482            809             XRL     A,#082H
00A1 6005            810             JZ      ?C0047
00A3 90007E          811             MOV     DPTR,#07EH
00A6 E4              812             CLR     A
00A7 F0              813             MOVX    @DPTR,A
00A8                 814     ?C0047:
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    14

                     815     ;       if (AC!=0) test_status = 0;
                     816                             ; SOURCE LINE # 186
00A8 30D605          817             JNB     AC,?C0048
00AB 90007E          818             MOV     DPTR,#07EH
00AE E4              819             CLR     A
00AF F0              820             MOVX    @DPTR,A
00B0                 821     ?C0048:
                     822     ;       if (OV!=0) test_status = 0;
                     823                             ; SOURCE LINE # 187
00B0 30D205          824             JNB     OV,?C0049
00B3 90007E          825             MOV     DPTR,#07EH
00B6 E4              826             CLR     A
00B7 F0              827             MOVX    @DPTR,A
00B8                 828     ?C0049:
                     829     ;       if (CY!=1) test_status = 0;
                     830                             ; SOURCE LINE # 188
00B8 20D705          831             JB      CY,?C0050
00BB 90007E          832             MOV     DPTR,#07EH
00BE E4              833             CLR     A
00BF F0              834             MOVX    @DPTR,A
00C0                 835     ?C0050:
                     836     ;       CY = 0; 
                     837                             ; SOURCE LINE # 189
00C0 C2D7            838             CLR     CY
                     839     ;       
                     840     ;       #pragma ASM 
                     841     ;       pop acc
00C2 D0E0            842               pop acc
                     843     ;   pop psw     
00C4 D0D0            844               pop psw       
                     845     ;   #pragma ENDASM
                     846     ;   error();    
                     847                             ; SOURCE LINE # 195
00C6 020000   F      848             LJMP    error
                     849     ; END OF add_a_ri
                     850     
                     851     ; }
                     852     ; 
                     853     ; void add_a_da(void) {
                     854     
----                 855             RSEG  ?PR?add_a_da?ARITHMETIC
0000                 856     add_a_da:
                     857             USING   0
                     858                             ; SOURCE LINE # 198
                     859     ;       printf("ADD_A_DA\n");
                     860                             ; SOURCE LINE # 199
0000 7BFF            861             MOV     R3,#0FFH
0002 7A00     F      862             MOV     R2,#HIGH (?SC_30)
0004 7900     F      863             MOV     R1,#LOW (?SC_30)
0006 120000   F      864             LCALL   _printf
                     865     ;       #pragma ASM  
                     866     ;       push psw
0009 C0D0            867               push psw
                     868     ;       push acc
000B C0E0            869               push acc
                     870     ;   mov  psw,#0H        
000D 75D000          871               mov  psw,#0H  
                     872     ;   setb rs0     
0010 D2D3            873               setb rs0     
                     874     ;       setb rs1        
0012 D2D4            875               setb rs1      
                     876     ;   #pragma ENDASM 
                     877     ;       
                     878     ;       #pragma ASM
                     879     ;       mov acc,#01H
0014 75E001          880               mov acc,#01H
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    15

                     881     ;       add A,#0fH
0017 240F            882               add A,#0fH
                     883     ;   #pragma ENDASM      
                     884     ;       if (ACC!=0x10) test_status = 0;
                     885                             ; SOURCE LINE # 212
0019 6410            886             XRL     A,#010H
001B 6005            887             JZ      ?C0052
001D 90007E          888             MOV     DPTR,#07EH
0020 E4              889             CLR     A
0021 F0              890             MOVX    @DPTR,A
0022                 891     ?C0052:
                     892     ;       if (AC!=1) test_status = 0;
                     893                             ; SOURCE LINE # 213
0022 20D605          894             JB      AC,?C0053
0025 90007E          895             MOV     DPTR,#07EH
0028 E4              896             CLR     A
0029 F0              897             MOVX    @DPTR,A
002A                 898     ?C0053:
                     899     ;       if (OV!=0) test_status = 0;
                     900                             ; SOURCE LINE # 214
002A 30D205          901             JNB     OV,?C0054
002D 90007E          902             MOV     DPTR,#07EH
0030 E4              903             CLR     A
0031 F0              904             MOVX    @DPTR,A
0032                 905     ?C0054:
                     906     ;       if (CY!=0) test_status = 0;
                     907                             ; SOURCE LINE # 215
0032 30D705          908             JNB     CY,?C0055
0035 90007E          909             MOV     DPTR,#07EH
0038 E4              910             CLR     A
0039 F0              911             MOVX    @DPTR,A
003A                 912     ?C0055:
                     913     ;       AC = 0;
                     914                             ; SOURCE LINE # 216
003A C2D6            915             CLR     AC
                     916     ;               
                     917     ;       #pragma ASM
                     918     ;       mov acc,#40H
003C 75E040          919               mov acc,#40H
                     920     ;       add A,#40H
003F 2440            921               add A,#40H
                     922     ;       #pragma ENDASM
                     923     ;       if (ACC!=0x80) test_status = 0;
                     924                             ; SOURCE LINE # 222
0041 6480            925             XRL     A,#080H
0043 6005            926             JZ      ?C0056
0045 90007E          927             MOV     DPTR,#07EH
0048 E4              928             CLR     A
0049 F0              929             MOVX    @DPTR,A
004A                 930     ?C0056:
                     931     ;       if (AC!=0) test_status = 0;
                     932                             ; SOURCE LINE # 223
004A 30D605          933             JNB     AC,?C0057
004D 90007E          934             MOV     DPTR,#07EH
0050 E4              935             CLR     A
0051 F0              936             MOVX    @DPTR,A
0052                 937     ?C0057:
                     938     ;       if (OV!=1) test_status = 0;
                     939                             ; SOURCE LINE # 224
0052 20D205          940             JB      OV,?C0058
0055 90007E          941             MOV     DPTR,#07EH
0058 E4              942             CLR     A
0059 F0              943             MOVX    @DPTR,A
005A                 944     ?C0058:
                     945     ;       if (CY!=0) test_status = 0;
                     946                             ; SOURCE LINE # 225
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    16

005A 30D705          947             JNB     CY,?C0059
005D 90007E          948             MOV     DPTR,#07EH
0060 E4              949             CLR     A
0061 F0              950             MOVX    @DPTR,A
0062                 951     ?C0059:
                     952     ;       OV = 0;
                     953                             ; SOURCE LINE # 226
0062 C2D2            954             CLR     OV
                     955     ; 
                     956     ;       
                     957     ;       #pragma ASM
                     958     ;   mov acc,#80H
0064 75E080          959               mov acc,#80H
                     960     ;       add A,#81H
0067 2481            961               add A,#81H
                     962     ;   #pragma ENDASM
                     963     ;       if (ACC!=0x01) test_status = 0;
                     964                             ; SOURCE LINE # 233
0069 6401            965             XRL     A,#01H
006B 6005            966             JZ      ?C0060
006D 90007E          967             MOV     DPTR,#07EH
0070 E4              968             CLR     A
0071 F0              969             MOVX    @DPTR,A
0072                 970     ?C0060:
                     971     ;       if (AC!=0) test_status = 0;
                     972                             ; SOURCE LINE # 234
0072 30D605          973             JNB     AC,?C0061
0075 90007E          974             MOV     DPTR,#07EH
0078 E4              975             CLR     A
0079 F0              976             MOVX    @DPTR,A
007A                 977     ?C0061:
                     978     ;       if (OV!=1) test_status = 0;
                     979                             ; SOURCE LINE # 235
007A 20D205          980             JB      OV,?C0062
007D 90007E          981             MOV     DPTR,#07EH
0080 E4              982             CLR     A
0081 F0              983             MOVX    @DPTR,A
0082                 984     ?C0062:
                     985     ;       if (CY!=1) test_status = 0;
                     986                             ; SOURCE LINE # 236
0082 20D705          987             JB      CY,?C0063
0085 90007E          988             MOV     DPTR,#07EH
0088 E4              989             CLR     A
0089 F0              990             MOVX    @DPTR,A
008A                 991     ?C0063:
                     992     ;       OV = 0;
                     993                             ; SOURCE LINE # 237
008A C2D2            994             CLR     OV
                     995     ;       CY = 0;
                     996                             ; SOURCE LINE # 238
008C C2D7            997             CLR     CY
                     998     ;       
                     999     ;       #pragma ASM
                    1000     ;   mov acc,#0C0H
008E 75E0C0         1001               mov acc,#0C0H
                    1002     ;       add A,#0C2H
0091 24C2           1003               add A,#0C2H
                    1004     ;   #pragma ENDASM
                    1005     ;       if (ACC!=0x82) test_status = 0;
                    1006                             ; SOURCE LINE # 244
0093 6482           1007             XRL     A,#082H
0095 6005           1008             JZ      ?C0064
0097 90007E         1009             MOV     DPTR,#07EH
009A E4             1010             CLR     A
009B F0             1011             MOVX    @DPTR,A
009C                1012     ?C0064:
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    17

                    1013     ;       if (AC!=0) test_status = 0;
                    1014                             ; SOURCE LINE # 245
009C 30D605         1015             JNB     AC,?C0065
009F 90007E         1016             MOV     DPTR,#07EH
00A2 E4             1017             CLR     A
00A3 F0             1018             MOVX    @DPTR,A
00A4                1019     ?C0065:
                    1020     ;       if (OV!=0) test_status = 0;
                    1021                             ; SOURCE LINE # 246
00A4 30D205         1022             JNB     OV,?C0066
00A7 90007E         1023             MOV     DPTR,#07EH
00AA E4             1024             CLR     A
00AB F0             1025             MOVX    @DPTR,A
00AC                1026     ?C0066:
                    1027     ;       if (CY!=1) test_status = 0;
                    1028                             ; SOURCE LINE # 247
00AC 20D705         1029             JB      CY,?C0067
00AF 90007E         1030             MOV     DPTR,#07EH
00B2 E4             1031             CLR     A
00B3 F0             1032             MOVX    @DPTR,A
00B4                1033     ?C0067:
                    1034     ;       CY = 0; 
                    1035                             ; SOURCE LINE # 248
00B4 C2D7           1036             CLR     CY
                    1037     ;       
                    1038     ;       #pragma ASM 
                    1039     ;       pop acc
00B6 D0E0           1040               pop acc
                    1041     ;   pop psw     
00B8 D0D0           1042               pop psw       
                    1043     ;   #pragma ENDASM
                    1044     ;   error();    
                    1045                             ; SOURCE LINE # 254
00BA 020000   F     1046             LJMP    error
                    1047     ; END OF add_a_da
                    1048     
                    1049     ; }
                    1050     ; 
                    1051     ; void addc_a_rn(void) {
                    1052     
----                1053             RSEG  ?PR?addc_a_rn?ARITHMETIC
0000                1054     addc_a_rn:
                    1055             USING   0
                    1056                             ; SOURCE LINE # 257
                    1057     ;       printf("ADDC_A_RN\n");
                    1058                             ; SOURCE LINE # 258
0000 7BFF           1059             MOV     R3,#0FFH
0002 7A00     F     1060             MOV     R2,#HIGH (?SC_40)
0004 7900     F     1061             MOV     R1,#LOW (?SC_40)
0006 120000   F     1062             LCALL   _printf
                    1063     ;       #pragma ASM  
                    1064     ;       push psw
0009 C0D0           1065               push psw
                    1066     ;       push acc
000B C0E0           1067               push acc
                    1068     ;   mov  psw,#0H        
000D 75D000         1069               mov  psw,#0H  
                    1070     ;   setb rs0     
0010 D2D3           1071               setb rs0     
                    1072     ;       setb rs1        
0012 D2D4           1073               setb rs1      
                    1074     ;   #pragma ENDASM 
                    1075     ;       
                    1076     ;       #pragma ASM
                    1077     ;       mov acc,#01H
0014 75E001         1078               mov acc,#01H
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    18

                    1079     ;       mov R0,#0fH
0017 780F           1080               mov R0,#0fH
                    1081     ;       setb C
0019 D3             1082               setb C
                    1083     ;       addc A,R0
001A 38             1084               addc A,R0
                    1085     ;   #pragma ENDASM      
                    1086     ;       if (ACC!=0x11) test_status = 0;
                    1087                             ; SOURCE LINE # 273
001B 6411           1088             XRL     A,#011H
001D 6005           1089             JZ      ?C0069
001F 90007E         1090             MOV     DPTR,#07EH
0022 E4             1091             CLR     A
0023 F0             1092             MOVX    @DPTR,A
0024                1093     ?C0069:
                    1094     ;       if (AC!=1) test_status = 0;
                    1095                             ; SOURCE LINE # 274
0024 20D605         1096             JB      AC,?C0070
0027 90007E         1097             MOV     DPTR,#07EH
002A E4             1098             CLR     A
002B F0             1099             MOVX    @DPTR,A
002C                1100     ?C0070:
                    1101     ;       if (OV!=0) test_status = 0;
                    1102                             ; SOURCE LINE # 275
002C 30D205         1103             JNB     OV,?C0071
002F 90007E         1104             MOV     DPTR,#07EH
0032 E4             1105             CLR     A
0033 F0             1106             MOVX    @DPTR,A
0034                1107     ?C0071:
                    1108     ;       if (CY!=0) test_status = 0;
                    1109                             ; SOURCE LINE # 276
0034 30D705         1110             JNB     CY,?C0072
0037 90007E         1111             MOV     DPTR,#07EH
003A E4             1112             CLR     A
003B F0             1113             MOVX    @DPTR,A
003C                1114     ?C0072:
                    1115     ;       AC = 0;
                    1116                             ; SOURCE LINE # 277
003C C2D6           1117             CLR     AC
                    1118     ;               
                    1119     ;       #pragma ASM
                    1120     ;       mov acc,#40H
003E 75E040         1121               mov acc,#40H
                    1122     ;       mov R1,#40H
0041 7940           1123               mov R1,#40H
                    1124     ;       setb C
0043 D3             1125               setb C
                    1126     ;       addc A,R1
0044 39             1127               addc A,R1
                    1128     ;       #pragma ENDASM
                    1129     ;       if (ACC!=0x81) test_status = 0;
                    1130                             ; SOURCE LINE # 285
0045 6481           1131             XRL     A,#081H
0047 6005           1132             JZ      ?C0073
0049 90007E         1133             MOV     DPTR,#07EH
004C E4             1134             CLR     A
004D F0             1135             MOVX    @DPTR,A
004E                1136     ?C0073:
                    1137     ;       if (AC!=0) test_status = 0;
                    1138                             ; SOURCE LINE # 286
004E 30D605         1139             JNB     AC,?C0074
0051 90007E         1140             MOV     DPTR,#07EH
0054 E4             1141             CLR     A
0055 F0             1142             MOVX    @DPTR,A
0056                1143     ?C0074:
                    1144     ;       if (OV!=1) test_status = 0;
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    19

                    1145                             ; SOURCE LINE # 287
0056 20D205         1146             JB      OV,?C0075
0059 90007E         1147             MOV     DPTR,#07EH
005C E4             1148             CLR     A
005D F0             1149             MOVX    @DPTR,A
005E                1150     ?C0075:
                    1151     ;       if (CY!=0) test_status = 0;
                    1152                             ; SOURCE LINE # 288
005E 30D705         1153             JNB     CY,?C0076
0061 90007E         1154             MOV     DPTR,#07EH
0064 E4             1155             CLR     A
0065 F0             1156             MOVX    @DPTR,A
0066                1157     ?C0076:
                    1158     ;       OV = 0;
                    1159                             ; SOURCE LINE # 289
0066 C2D2           1160             CLR     OV
                    1161     ; 
                    1162     ;       
                    1163     ;       #pragma ASM
                    1164     ;   mov acc,#80H
0068 75E080         1165               mov acc,#80H
                    1166     ;       mov R2,#81H
006B 7A81           1167               mov R2,#81H
                    1168     ;       setb C
006D D3             1169               setb C
                    1170     ;       addc A,R2
006E 3A             1171               addc A,R2
                    1172     ;   #pragma ENDASM
                    1173     ;       if (ACC!=0x02) test_status = 0;
                    1174                             ; SOURCE LINE # 298
006F 6402           1175             XRL     A,#02H
0071 6005           1176             JZ      ?C0077
0073 90007E         1177             MOV     DPTR,#07EH
0076 E4             1178             CLR     A
0077 F0             1179             MOVX    @DPTR,A
0078                1180     ?C0077:
                    1181     ;       if (AC!=0) test_status = 0;
                    1182                             ; SOURCE LINE # 299
0078 30D605         1183             JNB     AC,?C0078
007B 90007E         1184             MOV     DPTR,#07EH
007E E4             1185             CLR     A
007F F0             1186             MOVX    @DPTR,A
0080                1187     ?C0078:
                    1188     ;       if (OV!=1) test_status = 0;
                    1189                             ; SOURCE LINE # 300
0080 20D205         1190             JB      OV,?C0079
0083 90007E         1191             MOV     DPTR,#07EH
0086 E4             1192             CLR     A
0087 F0             1193             MOVX    @DPTR,A
0088                1194     ?C0079:
                    1195     ;       if (CY!=1) test_status = 0;
                    1196                             ; SOURCE LINE # 301
0088 20D705         1197             JB      CY,?C0080
008B 90007E         1198             MOV     DPTR,#07EH
008E E4             1199             CLR     A
008F F0             1200             MOVX    @DPTR,A
0090                1201     ?C0080:
                    1202     ;       OV = 0;
                    1203                             ; SOURCE LINE # 302
0090 C2D2           1204             CLR     OV
                    1205     ;       CY = 0;
                    1206                             ; SOURCE LINE # 303
0092 C2D7           1207             CLR     CY
                    1208     ;       
                    1209     ;       #pragma ASM
                    1210     ;   mov acc,#0C0H
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    20

0094 75E0C0         1211               mov acc,#0C0H
                    1212     ;       mov R3,#0C2H
0097 7BC2           1213               mov R3,#0C2H
                    1214     ;       setb C
0099 D3             1215               setb C
                    1216     ;       addc A,R3
009A 3B             1217               addc A,R3
                    1218     ;   #pragma ENDASM
                    1219     ;       if (ACC!=0x83) test_status = 0;
                    1220                             ; SOURCE LINE # 311
009B 6483           1221             XRL     A,#083H
009D 6005           1222             JZ      ?C0081
009F 90007E         1223             MOV     DPTR,#07EH
00A2 E4             1224             CLR     A
00A3 F0             1225             MOVX    @DPTR,A
00A4                1226     ?C0081:
                    1227     ;       if (AC!=0) test_status = 0;
                    1228                             ; SOURCE LINE # 312
00A4 30D605         1229             JNB     AC,?C0082
00A7 90007E         1230             MOV     DPTR,#07EH
00AA E4             1231             CLR     A
00AB F0             1232             MOVX    @DPTR,A
00AC                1233     ?C0082:
                    1234     ;       if (OV!=0) test_status = 0;
                    1235                             ; SOURCE LINE # 313
00AC 30D205         1236             JNB     OV,?C0083
00AF 90007E         1237             MOV     DPTR,#07EH
00B2 E4             1238             CLR     A
00B3 F0             1239             MOVX    @DPTR,A
00B4                1240     ?C0083:
                    1241     ;       if (CY!=1) test_status = 0;
                    1242                             ; SOURCE LINE # 314
00B4 20D705         1243             JB      CY,?C0084
00B7 90007E         1244             MOV     DPTR,#07EH
00BA E4             1245             CLR     A
00BB F0             1246             MOVX    @DPTR,A
00BC                1247     ?C0084:
                    1248     ;       CY = 0; 
                    1249                             ; SOURCE LINE # 315
00BC C2D7           1250             CLR     CY
                    1251     ;       
                    1252     ;       #pragma ASM 
                    1253     ;       pop acc
00BE D0E0           1254               pop acc
                    1255     ;   pop psw     
00C0 D0D0           1256               pop psw       
                    1257     ;   #pragma ENDASM
                    1258     ;   error();    
                    1259                             ; SOURCE LINE # 321
00C2 020000   F     1260             LJMP    error
                    1261     ; END OF addc_a_rn
                    1262     
                    1263     ; }
                    1264     ; 
                    1265     ; void addc_a_di(void) {
                    1266     
----                1267             RSEG  ?PR?addc_a_di?ARITHMETIC
0000                1268     addc_a_di:
                    1269             USING   0
                    1270                             ; SOURCE LINE # 324
                    1271     ;       printf("ADDC_A_DI\n");
                    1272                             ; SOURCE LINE # 325
0000 7BFF           1273             MOV     R3,#0FFH
0002 7A00     F     1274             MOV     R2,#HIGH (?SC_51)
0004 7900     F     1275             MOV     R1,#LOW (?SC_51)
0006 120000   F     1276             LCALL   _printf
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    21

                    1277     ;       #pragma ASM  
                    1278     ;       push psw
0009 C0D0           1279               push psw
                    1280     ;       push acc
000B C0E0           1281               push acc
                    1282     ;   mov  psw,#0H        
000D 75D000         1283               mov  psw,#0H  
                    1284     ;   setb rs0     
0010 D2D3           1285               setb rs0     
                    1286     ;       setb rs1        
0012 D2D4           1287               setb rs1      
                    1288     ;   #pragma ENDASM 
                    1289     ;       
                    1290     ;       #pragma ASM
                    1291     ;       mov acc,#01H
0014 75E001         1292               mov acc,#01H
                    1293     ;       mov R0,#0fH
0017 780F           1294               mov R0,#0fH
                    1295     ;       setb C
0019 D3             1296               setb C
                    1297     ;       addc A,0x18
001A 3518           1298               addc A,0x18
                    1299     ;   #pragma ENDASM      
                    1300     ;       if (ACC!=0x11) test_status = 0;
                    1301                             ; SOURCE LINE # 340
001C 6411           1302             XRL     A,#011H
001E 6005           1303             JZ      ?C0086
0020 90007E         1304             MOV     DPTR,#07EH
0023 E4             1305             CLR     A
0024 F0             1306             MOVX    @DPTR,A
0025                1307     ?C0086:
                    1308     ;       if (AC!=1) test_status = 0;
                    1309                             ; SOURCE LINE # 341
0025 20D605         1310             JB      AC,?C0087
0028 90007E         1311             MOV     DPTR,#07EH
002B E4             1312             CLR     A
002C F0             1313             MOVX    @DPTR,A
002D                1314     ?C0087:
                    1315     ;       if (OV!=0) test_status = 0;
                    1316                             ; SOURCE LINE # 342
002D 30D205         1317             JNB     OV,?C0088
0030 90007E         1318             MOV     DPTR,#07EH
0033 E4             1319             CLR     A
0034 F0             1320             MOVX    @DPTR,A
0035                1321     ?C0088:
                    1322     ;       if (CY!=0) test_status = 0;
                    1323                             ; SOURCE LINE # 343
0035 30D705         1324             JNB     CY,?C0089
0038 90007E         1325             MOV     DPTR,#07EH
003B E4             1326             CLR     A
003C F0             1327             MOVX    @DPTR,A
003D                1328     ?C0089:
                    1329     ;       AC = 0;
                    1330                             ; SOURCE LINE # 344
003D C2D6           1331             CLR     AC
                    1332     ;               
                    1333     ;       #pragma ASM
                    1334     ;       mov acc,#40H
003F 75E040         1335               mov acc,#40H
                    1336     ;       mov R1,#40H
0042 7940           1337               mov R1,#40H
                    1338     ;       setb C
0044 D3             1339               setb C
                    1340     ;       addc A,0x19
0045 3519           1341               addc A,0x19
                    1342     ;       #pragma ENDASM
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    22

                    1343     ;       if (ACC!=0x81) test_status = 0;
                    1344                             ; SOURCE LINE # 352
0047 6481           1345             XRL     A,#081H
0049 6005           1346             JZ      ?C0090
004B 90007E         1347             MOV     DPTR,#07EH
004E E4             1348             CLR     A
004F F0             1349             MOVX    @DPTR,A
0050                1350     ?C0090:
                    1351     ;       if (AC!=0) test_status = 0;
                    1352                             ; SOURCE LINE # 353
0050 30D605         1353             JNB     AC,?C0091
0053 90007E         1354             MOV     DPTR,#07EH
0056 E4             1355             CLR     A
0057 F0             1356             MOVX    @DPTR,A
0058                1357     ?C0091:
                    1358     ;       if (OV!=1) test_status = 0;
                    1359                             ; SOURCE LINE # 354
0058 20D205         1360             JB      OV,?C0092
005B 90007E         1361             MOV     DPTR,#07EH
005E E4             1362             CLR     A
005F F0             1363             MOVX    @DPTR,A
0060                1364     ?C0092:
                    1365     ;       if (CY!=0) test_status = 0;
                    1366                             ; SOURCE LINE # 355
0060 30D705         1367             JNB     CY,?C0093
0063 90007E         1368             MOV     DPTR,#07EH
0066 E4             1369             CLR     A
0067 F0             1370             MOVX    @DPTR,A
0068                1371     ?C0093:
                    1372     ;       OV = 0;
                    1373                             ; SOURCE LINE # 356
0068 C2D2           1374             CLR     OV
                    1375     ; 
                    1376     ;       
                    1377     ;       #pragma ASM
                    1378     ;   mov acc,#80H
006A 75E080         1379               mov acc,#80H
                    1380     ;       mov R2,#81H
006D 7A81           1381               mov R2,#81H
                    1382     ;       setb C
006F D3             1383               setb C
                    1384     ;       addc A,0x1a
0070 351A           1385               addc A,0x1a
                    1386     ;   #pragma ENDASM
                    1387     ;       if (ACC!=0x02) test_status = 0;
                    1388                             ; SOURCE LINE # 365
0072 6402           1389             XRL     A,#02H
0074 6005           1390             JZ      ?C0094
0076 90007E         1391             MOV     DPTR,#07EH
0079 E4             1392             CLR     A
007A F0             1393             MOVX    @DPTR,A
007B                1394     ?C0094:
                    1395     ;       if (AC!=0) test_status = 0;
                    1396                             ; SOURCE LINE # 366
007B 30D605         1397             JNB     AC,?C0095
007E 90007E         1398             MOV     DPTR,#07EH
0081 E4             1399             CLR     A
0082 F0             1400             MOVX    @DPTR,A
0083                1401     ?C0095:
                    1402     ;       if (OV!=1) test_status = 0;
                    1403                             ; SOURCE LINE # 367
0083 20D205         1404             JB      OV,?C0096
0086 90007E         1405             MOV     DPTR,#07EH
0089 E4             1406             CLR     A
008A F0             1407             MOVX    @DPTR,A
008B                1408     ?C0096:
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    23

                    1409     ;       if (CY!=1) test_status = 0;
                    1410                             ; SOURCE LINE # 368
008B 20D705         1411             JB      CY,?C0097
008E 90007E         1412             MOV     DPTR,#07EH
0091 E4             1413             CLR     A
0092 F0             1414             MOVX    @DPTR,A
0093                1415     ?C0097:
                    1416     ;       OV = 0;
                    1417                             ; SOURCE LINE # 369
0093 C2D2           1418             CLR     OV
                    1419     ;       CY = 0;
                    1420                             ; SOURCE LINE # 370
0095 C2D7           1421             CLR     CY
                    1422     ;       
                    1423     ;       #pragma ASM
                    1424     ;   mov acc,#0C0H
0097 75E0C0         1425               mov acc,#0C0H
                    1426     ;       mov R3,#0C2H
009A 7BC2           1427               mov R3,#0C2H
                    1428     ;       setb C
009C D3             1429               setb C
                    1430     ;       addc A,0x1b
009D 351B           1431               addc A,0x1b
                    1432     ;   #pragma ENDASM
                    1433     ;       if (ACC!=0x83) test_status = 0;
                    1434                             ; SOURCE LINE # 378
009F 6483           1435             XRL     A,#083H
00A1 6005           1436             JZ      ?C0098
00A3 90007E         1437             MOV     DPTR,#07EH
00A6 E4             1438             CLR     A
00A7 F0             1439             MOVX    @DPTR,A
00A8                1440     ?C0098:
                    1441     ;       if (AC!=0) test_status = 0;
                    1442                             ; SOURCE LINE # 379
00A8 30D605         1443             JNB     AC,?C0099
00AB 90007E         1444             MOV     DPTR,#07EH
00AE E4             1445             CLR     A
00AF F0             1446             MOVX    @DPTR,A
00B0                1447     ?C0099:
                    1448     ;       if (OV!=0) test_status = 0;
                    1449                             ; SOURCE LINE # 380
00B0 30D205         1450             JNB     OV,?C0100
00B3 90007E         1451             MOV     DPTR,#07EH
00B6 E4             1452             CLR     A
00B7 F0             1453             MOVX    @DPTR,A
00B8                1454     ?C0100:
                    1455     ;       if (CY!=1) test_status = 0;
                    1456                             ; SOURCE LINE # 381
00B8 20D705         1457             JB      CY,?C0101
00BB 90007E         1458             MOV     DPTR,#07EH
00BE E4             1459             CLR     A
00BF F0             1460             MOVX    @DPTR,A
00C0                1461     ?C0101:
                    1462     ;       CY = 0; 
                    1463                             ; SOURCE LINE # 382
00C0 C2D7           1464             CLR     CY
                    1465     ;       
                    1466     ;       #pragma ASM 
                    1467     ;       pop acc
00C2 D0E0           1468               pop acc
                    1469     ;   pop psw     
00C4 D0D0           1470               pop psw       
                    1471     ;   #pragma ENDASM 
                    1472     ;   error();  
                    1473                             ; SOURCE LINE # 388
00C6 020000   F     1474             LJMP    error
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    24

                    1475     ; END OF addc_a_di
                    1476     
                    1477     ; }
                    1478     ; 
                    1479     ; void addc_a_ri(void) {
                    1480     
----                1481             RSEG  ?PR?addc_a_ri?ARITHMETIC
0000                1482     addc_a_ri:
                    1483             USING   0
                    1484                             ; SOURCE LINE # 391
                    1485     ;       printf("ADDC_A_RI\n");
                    1486                             ; SOURCE LINE # 392
0000 7BFF           1487             MOV     R3,#0FFH
0002 7A00     F     1488             MOV     R2,#HIGH (?SC_62)
0004 7900     F     1489             MOV     R1,#LOW (?SC_62)
0006 120000   F     1490             LCALL   _printf
                    1491     ;       #pragma ASM  
                    1492     ;       push psw
0009 C0D0           1493               push psw
                    1494     ;       push acc
000B C0E0           1495               push acc
                    1496     ;   mov  psw,#0H        
000D 75D000         1497               mov  psw,#0H  
                    1498     ;   setb rs0     
0010 D2D3           1499               setb rs0     
                    1500     ;       setb rs1        
0012 D2D4           1501               setb rs1      
                    1502     ;   #pragma ENDASM 
                    1503     ;       
                    1504     ;       #pragma ASM
                    1505     ;       mov acc,#01H
0014 75E001         1506               mov acc,#01H
                    1507     ;       mov R2,#0fH
0017 7A0F           1508               mov R2,#0fH
                    1509     ;       mov R0,#1aH
0019 781A           1510               mov R0,#1aH
                    1511     ;       setb C
001B D3             1512               setb C
                    1513     ;       addc A,@R0
001C 36             1514               addc A,@R0
                    1515     ;   #pragma ENDASM      
                    1516     ;       if (ACC!=0x11) test_status = 0;
                    1517                             ; SOURCE LINE # 408
001D 6411           1518             XRL     A,#011H
001F 6005           1519             JZ      ?C0103
0021 90007E         1520             MOV     DPTR,#07EH
0024 E4             1521             CLR     A
0025 F0             1522             MOVX    @DPTR,A
0026                1523     ?C0103:
                    1524     ;       if (AC!=1) test_status = 0;
                    1525                             ; SOURCE LINE # 409
0026 20D605         1526             JB      AC,?C0104
0029 90007E         1527             MOV     DPTR,#07EH
002C E4             1528             CLR     A
002D F0             1529             MOVX    @DPTR,A
002E                1530     ?C0104:
                    1531     ;       if (OV!=0) test_status = 0;
                    1532                             ; SOURCE LINE # 410
002E 30D205         1533             JNB     OV,?C0105
0031 90007E         1534             MOV     DPTR,#07EH
0034 E4             1535             CLR     A
0035 F0             1536             MOVX    @DPTR,A
0036                1537     ?C0105:
                    1538     ;       if (CY!=0) test_status = 0;
                    1539                             ; SOURCE LINE # 411
0036 30D705         1540             JNB     CY,?C0106
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    25

0039 90007E         1541             MOV     DPTR,#07EH
003C E4             1542             CLR     A
003D F0             1543             MOVX    @DPTR,A
003E                1544     ?C0106:
                    1545     ;       AC = 0;
                    1546                             ; SOURCE LINE # 412
003E C2D6           1547             CLR     AC
                    1548     ;               
                    1549     ;       #pragma ASM
                    1550     ;       mov acc,#40H
0040 75E040         1551               mov acc,#40H
                    1552     ;       mov R2,#40H
0043 7A40           1553               mov R2,#40H
                    1554     ;       mov R0,#1aH
0045 781A           1555               mov R0,#1aH
                    1556     ;       setb C
0047 D3             1557               setb C
                    1558     ;       addc A,@R0
0048 36             1559               addc A,@R0
                    1560     ;       #pragma ENDASM
                    1561     ;       if (ACC!=0x81) test_status = 0;
                    1562                             ; SOURCE LINE # 421
0049 6481           1563             XRL     A,#081H
004B 6005           1564             JZ      ?C0107
004D 90007E         1565             MOV     DPTR,#07EH
0050 E4             1566             CLR     A
0051 F0             1567             MOVX    @DPTR,A
0052                1568     ?C0107:
                    1569     ;       if (AC!=0) test_status = 0;
                    1570                             ; SOURCE LINE # 422
0052 30D605         1571             JNB     AC,?C0108
0055 90007E         1572             MOV     DPTR,#07EH
0058 E4             1573             CLR     A
0059 F0             1574             MOVX    @DPTR,A
005A                1575     ?C0108:
                    1576     ;       if (OV!=1) test_status = 0;
                    1577                             ; SOURCE LINE # 423
005A 20D205         1578             JB      OV,?C0109
005D 90007E         1579             MOV     DPTR,#07EH
0060 E4             1580             CLR     A
0061 F0             1581             MOVX    @DPTR,A
0062                1582     ?C0109:
                    1583     ;       if (CY!=0) test_status = 0;
                    1584                             ; SOURCE LINE # 424
0062 30D705         1585             JNB     CY,?C0110
0065 90007E         1586             MOV     DPTR,#07EH
0068 E4             1587             CLR     A
0069 F0             1588             MOVX    @DPTR,A
006A                1589     ?C0110:
                    1590     ;       OV = 0;
                    1591                             ; SOURCE LINE # 425
006A C2D2           1592             CLR     OV
                    1593     ; 
                    1594     ;       
                    1595     ;       #pragma ASM
                    1596     ;   mov acc,#80H
006C 75E080         1597               mov acc,#80H
                    1598     ;       mov R3,#81H
006F 7B81           1599               mov R3,#81H
                    1600     ;       mov R1,#1bH
0071 791B           1601               mov R1,#1bH
                    1602     ;       setb C
0073 D3             1603               setb C
                    1604     ;       addc A,@R1
0074 37             1605               addc A,@R1
                    1606     ;   #pragma ENDASM
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    26

                    1607     ;       if (ACC!=0x02) test_status = 0;
                    1608                             ; SOURCE LINE # 435
0075 6402           1609             XRL     A,#02H
0077 6005           1610             JZ      ?C0111
0079 90007E         1611             MOV     DPTR,#07EH
007C E4             1612             CLR     A
007D F0             1613             MOVX    @DPTR,A
007E                1614     ?C0111:
                    1615     ;       if (AC!=0) test_status = 0;
                    1616                             ; SOURCE LINE # 436
007E 30D605         1617             JNB     AC,?C0112
0081 90007E         1618             MOV     DPTR,#07EH
0084 E4             1619             CLR     A
0085 F0             1620             MOVX    @DPTR,A
0086                1621     ?C0112:
                    1622     ;       if (OV!=1) test_status = 0;
                    1623                             ; SOURCE LINE # 437
0086 20D205         1624             JB      OV,?C0113
0089 90007E         1625             MOV     DPTR,#07EH
008C E4             1626             CLR     A
008D F0             1627             MOVX    @DPTR,A
008E                1628     ?C0113:
                    1629     ;       if (CY!=1) test_status = 0;
                    1630                             ; SOURCE LINE # 438
008E 20D705         1631             JB      CY,?C0114
0091 90007E         1632             MOV     DPTR,#07EH
0094 E4             1633             CLR     A
0095 F0             1634             MOVX    @DPTR,A
0096                1635     ?C0114:
                    1636     ;       OV = 0;
                    1637                             ; SOURCE LINE # 439
0096 C2D2           1638             CLR     OV
                    1639     ;       CY = 0;
                    1640                             ; SOURCE LINE # 440
0098 C2D7           1641             CLR     CY
                    1642     ;       
                    1643     ;       #pragma ASM
                    1644     ;   mov acc,#0C0H
009A 75E0C0         1645               mov acc,#0C0H
                    1646     ;       mov R3,#0C2H
009D 7BC2           1647               mov R3,#0C2H
                    1648     ;       mov R1,#1bH
009F 791B           1649               mov R1,#1bH
                    1650     ;       setb C
00A1 D3             1651               setb C
                    1652     ;       addc A,@R1
00A2 37             1653               addc A,@R1
                    1654     ;   #pragma ENDASM
                    1655     ;       if (ACC!=0x83) test_status = 0;
                    1656                             ; SOURCE LINE # 449
00A3 6483           1657             XRL     A,#083H
00A5 6005           1658             JZ      ?C0115
00A7 90007E         1659             MOV     DPTR,#07EH
00AA E4             1660             CLR     A
00AB F0             1661             MOVX    @DPTR,A
00AC                1662     ?C0115:
                    1663     ;       if (AC!=0) test_status = 0;
                    1664                             ; SOURCE LINE # 450
00AC 30D605         1665             JNB     AC,?C0116
00AF 90007E         1666             MOV     DPTR,#07EH
00B2 E4             1667             CLR     A
00B3 F0             1668             MOVX    @DPTR,A
00B4                1669     ?C0116:
                    1670     ;       if (OV!=0) test_status = 0;
                    1671                             ; SOURCE LINE # 451
00B4 30D205         1672             JNB     OV,?C0117
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    27

00B7 90007E         1673             MOV     DPTR,#07EH
00BA E4             1674             CLR     A
00BB F0             1675             MOVX    @DPTR,A
00BC                1676     ?C0117:
                    1677     ;       if (CY!=1) test_status = 0;
                    1678                             ; SOURCE LINE # 452
00BC 20D705         1679             JB      CY,?C0118
00BF 90007E         1680             MOV     DPTR,#07EH
00C2 E4             1681             CLR     A
00C3 F0             1682             MOVX    @DPTR,A
00C4                1683     ?C0118:
                    1684     ;       CY = 0; 
                    1685                             ; SOURCE LINE # 453
00C4 C2D7           1686             CLR     CY
                    1687     ;       
                    1688     ;       #pragma ASM 
                    1689     ;       pop acc
00C6 D0E0           1690               pop acc
                    1691     ;   pop psw     
00C8 D0D0           1692               pop psw       
                    1693     ;   #pragma ENDASM
                    1694     ;   error();  
                    1695                             ; SOURCE LINE # 459
00CA 020000   F     1696             LJMP    error
                    1697     ; END OF addc_a_ri
                    1698     
                    1699     ; }
                    1700     ; 
                    1701     ; void addc_a_da(void) {
                    1702     
----                1703             RSEG  ?PR?addc_a_da?ARITHMETIC
0000                1704     addc_a_da:
                    1705             USING   0
                    1706                             ; SOURCE LINE # 462
                    1707     ;       printf("ADDC_A_DA\n");  
                    1708                             ; SOURCE LINE # 463
0000 7BFF           1709             MOV     R3,#0FFH
0002 7A00     F     1710             MOV     R2,#HIGH (?SC_73)
0004 7900     F     1711             MOV     R1,#LOW (?SC_73)
0006 120000   F     1712             LCALL   _printf
                    1713     ;       #pragma ASM  
                    1714     ;       push psw
0009 C0D0           1715               push psw
                    1716     ;       push acc
000B C0E0           1717               push acc
                    1718     ;   mov  psw,#0H        
000D 75D000         1719               mov  psw,#0H  
                    1720     ;   setb rs0     
0010 D2D3           1721               setb rs0     
                    1722     ;       setb rs1        
0012 D2D4           1723               setb rs1      
                    1724     ;   #pragma ENDASM 
                    1725     ;       
                    1726     ;       #pragma ASM
                    1727     ;       mov acc,#01H
0014 75E001         1728               mov acc,#01H
                    1729     ;       setb C
0017 D3             1730               setb C
                    1731     ;       addc A,#0fH
0018 340F           1732               addc A,#0fH
                    1733     ;   #pragma ENDASM      
                    1734     ;       if (ACC!=0x11) test_status = 0;
                    1735                             ; SOURCE LINE # 477
001A 6411           1736             XRL     A,#011H
001C 6005           1737             JZ      ?C0120
001E 90007E         1738             MOV     DPTR,#07EH
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    28

0021 E4             1739             CLR     A
0022 F0             1740             MOVX    @DPTR,A
0023                1741     ?C0120:
                    1742     ;       if (AC!=1) test_status = 0;
                    1743                             ; SOURCE LINE # 478
0023 20D605         1744             JB      AC,?C0121
0026 90007E         1745             MOV     DPTR,#07EH
0029 E4             1746             CLR     A
002A F0             1747             MOVX    @DPTR,A
002B                1748     ?C0121:
                    1749     ;       if (OV!=0) test_status = 0;
                    1750                             ; SOURCE LINE # 479
002B 30D205         1751             JNB     OV,?C0122
002E 90007E         1752             MOV     DPTR,#07EH
0031 E4             1753             CLR     A
0032 F0             1754             MOVX    @DPTR,A
0033                1755     ?C0122:
                    1756     ;       if (CY!=0) test_status = 0;
                    1757                             ; SOURCE LINE # 480
0033 30D705         1758             JNB     CY,?C0123
0036 90007E         1759             MOV     DPTR,#07EH
0039 E4             1760             CLR     A
003A F0             1761             MOVX    @DPTR,A
003B                1762     ?C0123:
                    1763     ;       AC = 0;
                    1764                             ; SOURCE LINE # 481
003B C2D6           1765             CLR     AC
                    1766     ;               
                    1767     ;       #pragma ASM
                    1768     ;       mov acc,#40H
003D 75E040         1769               mov acc,#40H
                    1770     ;       setb C
0040 D3             1771               setb C
                    1772     ;       addc A,#40H
0041 3440           1773               addc A,#40H
                    1774     ;       #pragma ENDASM
                    1775     ;       if (ACC!=0x81) test_status = 0;
                    1776                             ; SOURCE LINE # 488
0043 6481           1777             XRL     A,#081H
0045 6005           1778             JZ      ?C0124
0047 90007E         1779             MOV     DPTR,#07EH
004A E4             1780             CLR     A
004B F0             1781             MOVX    @DPTR,A
004C                1782     ?C0124:
                    1783     ;       if (AC!=0) test_status = 0;
                    1784                             ; SOURCE LINE # 489
004C 30D605         1785             JNB     AC,?C0125
004F 90007E         1786             MOV     DPTR,#07EH
0052 E4             1787             CLR     A
0053 F0             1788             MOVX    @DPTR,A
0054                1789     ?C0125:
                    1790     ;       if (OV!=1) test_status = 0;
                    1791                             ; SOURCE LINE # 490
0054 20D205         1792             JB      OV,?C0126
0057 90007E         1793             MOV     DPTR,#07EH
005A E4             1794             CLR     A
005B F0             1795             MOVX    @DPTR,A
005C                1796     ?C0126:
                    1797     ;       if (CY!=0) test_status = 0;
                    1798                             ; SOURCE LINE # 491
005C 30D705         1799             JNB     CY,?C0127
005F 90007E         1800             MOV     DPTR,#07EH
0062 E4             1801             CLR     A
0063 F0             1802             MOVX    @DPTR,A
0064                1803     ?C0127:
                    1804     ;       OV = 0;
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    29

                    1805                             ; SOURCE LINE # 492
0064 C2D2           1806             CLR     OV
                    1807     ; 
                    1808     ;       
                    1809     ;       #pragma ASM
                    1810     ;   mov acc,#80H
0066 75E080         1811               mov acc,#80H
                    1812     ;       setb C
0069 D3             1813               setb C
                    1814     ;       addc A,#81H
006A 3481           1815               addc A,#81H
                    1816     ;   #pragma ENDASM
                    1817     ;       if (ACC!=0x02) test_status = 0;
                    1818                             ; SOURCE LINE # 500
006C 6402           1819             XRL     A,#02H
006E 6005           1820             JZ      ?C0128
0070 90007E         1821             MOV     DPTR,#07EH
0073 E4             1822             CLR     A
0074 F0             1823             MOVX    @DPTR,A
0075                1824     ?C0128:
                    1825     ;       if (AC!=0) test_status = 0;
                    1826                             ; SOURCE LINE # 501
0075 30D605         1827             JNB     AC,?C0129
0078 90007E         1828             MOV     DPTR,#07EH
007B E4             1829             CLR     A
007C F0             1830             MOVX    @DPTR,A
007D                1831     ?C0129:
                    1832     ;       if (OV!=1) test_status = 0;
                    1833                             ; SOURCE LINE # 502
007D 20D205         1834             JB      OV,?C0130
0080 90007E         1835             MOV     DPTR,#07EH
0083 E4             1836             CLR     A
0084 F0             1837             MOVX    @DPTR,A
0085                1838     ?C0130:
                    1839     ;       if (CY!=1) test_status = 0;
                    1840                             ; SOURCE LINE # 503
0085 20D705         1841             JB      CY,?C0131
0088 90007E         1842             MOV     DPTR,#07EH
008B E4             1843             CLR     A
008C F0             1844             MOVX    @DPTR,A
008D                1845     ?C0131:
                    1846     ;       OV = 0;
                    1847                             ; SOURCE LINE # 504
008D C2D2           1848             CLR     OV
                    1849     ;       CY = 0;
                    1850                             ; SOURCE LINE # 505
008F C2D7           1851             CLR     CY
                    1852     ;       
                    1853     ;       #pragma ASM
                    1854     ;   mov acc,#0C0H
0091 75E0C0         1855               mov acc,#0C0H
                    1856     ;       setb C
0094 D3             1857               setb C
                    1858     ;       addc A,#0C2H
0095 34C2           1859               addc A,#0C2H
                    1860     ;   #pragma ENDASM
                    1861     ;       if (ACC!=0x83) test_status = 0;
                    1862                             ; SOURCE LINE # 512
0097 6483           1863             XRL     A,#083H
0099 6005           1864             JZ      ?C0132
009B 90007E         1865             MOV     DPTR,#07EH
009E E4             1866             CLR     A
009F F0             1867             MOVX    @DPTR,A
00A0                1868     ?C0132:
                    1869     ;       if (AC!=0) test_status = 0;
                    1870                             ; SOURCE LINE # 513
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    30

00A0 30D605         1871             JNB     AC,?C0133
00A3 90007E         1872             MOV     DPTR,#07EH
00A6 E4             1873             CLR     A
00A7 F0             1874             MOVX    @DPTR,A
00A8                1875     ?C0133:
                    1876     ;       if (OV!=0) test_status = 0;
                    1877                             ; SOURCE LINE # 514
00A8 30D205         1878             JNB     OV,?C0134
00AB 90007E         1879             MOV     DPTR,#07EH
00AE E4             1880             CLR     A
00AF F0             1881             MOVX    @DPTR,A
00B0                1882     ?C0134:
                    1883     ;       if (CY!=1) test_status = 0;
                    1884                             ; SOURCE LINE # 515
00B0 20D705         1885             JB      CY,?C0135
00B3 90007E         1886             MOV     DPTR,#07EH
00B6 E4             1887             CLR     A
00B7 F0             1888             MOVX    @DPTR,A
00B8                1889     ?C0135:
                    1890     ;       CY = 0; 
                    1891                             ; SOURCE LINE # 516
00B8 C2D7           1892             CLR     CY
                    1893     ;       
                    1894     ;       #pragma ASM 
                    1895     ;       pop acc
00BA D0E0           1896               pop acc
                    1897     ;   pop psw     
00BC D0D0           1898               pop psw       
                    1899     ;   #pragma ENDASM
                    1900     ;   error();  
                    1901                             ; SOURCE LINE # 522
00BE 020000   F     1902             LJMP    error
                    1903     ; END OF addc_a_da
                    1904     
                    1905     ; }
                    1906     ; 
                    1907     ; void subb_a_rn(void) {
                    1908     
----                1909             RSEG  ?PR?subb_a_rn?ARITHMETIC
0000                1910     subb_a_rn:
                    1911             USING   0
                    1912                             ; SOURCE LINE # 525
                    1913     ;       printf("SUBB_A_RN\n");
                    1914                             ; SOURCE LINE # 526
0000 7BFF           1915             MOV     R3,#0FFH
0002 7A00     F     1916             MOV     R2,#HIGH (?SC_84)
0004 7900     F     1917             MOV     R1,#LOW (?SC_84)
0006 120000   F     1918             LCALL   _printf
                    1919     ;       #pragma ASM  
                    1920     ;       push psw
0009 C0D0           1921               push psw
                    1922     ;       push acc
000B C0E0           1923               push acc
                    1924     ;   mov  psw,#0H        
000D 75D000         1925               mov  psw,#0H  
                    1926     ;   setb rs0     
0010 D2D3           1927               setb rs0     
                    1928     ;       setb rs1        
0012 D2D4           1929               setb rs1      
                    1930     ;   #pragma ENDASM 
                    1931     ;       
                    1932     ;       #pragma ASM
                    1933     ;       mov acc,#10H
0014 75E010         1934               mov acc,#10H
                    1935     ;       mov R0,#0eH
0017 780E           1936               mov R0,#0eH
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    31

                    1937     ;       setb C
0019 D3             1938               setb C
                    1939     ;       subb A,R0
001A 98             1940               subb A,R0
                    1941     ;   #pragma ENDASM      
                    1942     ;       if (ACC!=0x1) test_status = 0;
                    1943                             ; SOURCE LINE # 541
001B 6401           1944             XRL     A,#01H
001D 6005           1945             JZ      ?C0137
001F 90007E         1946             MOV     DPTR,#07EH
0022 E4             1947             CLR     A
0023 F0             1948             MOVX    @DPTR,A
0024                1949     ?C0137:
                    1950     ;       if (AC!=1) test_status = 0;
                    1951                             ; SOURCE LINE # 542
0024 20D605         1952             JB      AC,?C0138
0027 90007E         1953             MOV     DPTR,#07EH
002A E4             1954             CLR     A
002B F0             1955             MOVX    @DPTR,A
002C                1956     ?C0138:
                    1957     ;       if (OV!=0) test_status = 0;
                    1958                             ; SOURCE LINE # 543
002C 30D205         1959             JNB     OV,?C0139
002F 90007E         1960             MOV     DPTR,#07EH
0032 E4             1961             CLR     A
0033 F0             1962             MOVX    @DPTR,A
0034                1963     ?C0139:
                    1964     ;       if (CY!=0) test_status = 0;
                    1965                             ; SOURCE LINE # 544
0034 30D705         1966             JNB     CY,?C0140
0037 90007E         1967             MOV     DPTR,#07EH
003A E4             1968             CLR     A
003B F0             1969             MOVX    @DPTR,A
003C                1970     ?C0140:
                    1971     ;       AC = 0;
                    1972                             ; SOURCE LINE # 545
003C C2D6           1973             CLR     AC
                    1974     ;       
                    1975     ;       #pragma ASM
                    1976     ;       mov acc,#80H
003E 75E080         1977               mov acc,#80H
                    1978     ;       mov R1,#3fH
0041 793F           1979               mov R1,#3fH
                    1980     ;       setb C
0043 D3             1981               setb C
                    1982     ;       subb A,R1
0044 99             1983               subb A,R1
                    1984     ;       #pragma ENDASM
                    1985     ;       if (ACC!=0x40) test_status = 0;
                    1986                             ; SOURCE LINE # 553
0045 6440           1987             XRL     A,#040H
0047 6005           1988             JZ      ?C0141
0049 90007E         1989             MOV     DPTR,#07EH
004C E4             1990             CLR     A
004D F0             1991             MOVX    @DPTR,A
004E                1992     ?C0141:
                    1993     ;       if (AC!=1) test_status = 0;
                    1994                             ; SOURCE LINE # 554
004E 20D605         1995             JB      AC,?C0142
0051 90007E         1996             MOV     DPTR,#07EH
0054 E4             1997             CLR     A
0055 F0             1998             MOVX    @DPTR,A
0056                1999     ?C0142:
                    2000     ;       if (OV!=1) test_status = 0;
                    2001                             ; SOURCE LINE # 555
0056 20D205         2002             JB      OV,?C0143
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    32

0059 90007E         2003             MOV     DPTR,#07EH
005C E4             2004             CLR     A
005D F0             2005             MOVX    @DPTR,A
005E                2006     ?C0143:
                    2007     ;       if (CY!=0) test_status = 0;
                    2008                             ; SOURCE LINE # 556
005E 30D705         2009             JNB     CY,?C0144
0061 90007E         2010             MOV     DPTR,#07EH
0064 E4             2011             CLR     A
0065 F0             2012             MOVX    @DPTR,A
0066                2013     ?C0144:
                    2014     ;       OV = 0;
                    2015                             ; SOURCE LINE # 557
0066 C2D2           2016             CLR     OV
                    2017     ; 
                    2018     ;       
                    2019     ;       #pragma ASM
                    2020     ;   mov acc,#01H
0068 75E001         2021               mov acc,#01H
                    2022     ;       mov R2,#80H
006B 7A80           2023               mov R2,#80H
                    2024     ;       setb C
006D D3             2025               setb C
                    2026     ;       subb A,R2
006E 9A             2027               subb A,R2
                    2028     ;   #pragma ENDASM
                    2029     ;       if (ACC!=0x80) test_status = 0;
                    2030                             ; SOURCE LINE # 566
006F 6480           2031             XRL     A,#080H
0071 6005           2032             JZ      ?C0145
0073 90007E         2033             MOV     DPTR,#07EH
0076 E4             2034             CLR     A
0077 F0             2035             MOVX    @DPTR,A
0078                2036     ?C0145:
                    2037     ;       if (AC!=0) test_status = 0;
                    2038                             ; SOURCE LINE # 567
0078 30D605         2039             JNB     AC,?C0146
007B 90007E         2040             MOV     DPTR,#07EH
007E E4             2041             CLR     A
007F F0             2042             MOVX    @DPTR,A
0080                2043     ?C0146:
                    2044     ;       if (OV!=1) test_status = 0;
                    2045                             ; SOURCE LINE # 568
0080 20D205         2046             JB      OV,?C0147
0083 90007E         2047             MOV     DPTR,#07EH
0086 E4             2048             CLR     A
0087 F0             2049             MOVX    @DPTR,A
0088                2050     ?C0147:
                    2051     ;       if (CY!=1) test_status = 0;
                    2052                             ; SOURCE LINE # 569
0088 20D705         2053             JB      CY,?C0148
008B 90007E         2054             MOV     DPTR,#07EH
008E E4             2055             CLR     A
008F F0             2056             MOVX    @DPTR,A
0090                2057     ?C0148:
                    2058     ;       OV = 0;
                    2059                             ; SOURCE LINE # 570
0090 C2D2           2060             CLR     OV
                    2061     ;       CY = 0;
                    2062                             ; SOURCE LINE # 571
0092 C2D7           2063             CLR     CY
                    2064     ; 
                    2065     ;       #pragma ASM
                    2066     ;   mov acc,#82H
0094 75E082         2067               mov acc,#82H
                    2068     ;       mov R3,#0C1H
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    33

0097 7BC1           2069               mov R3,#0C1H
                    2070     ;       setb C
0099 D3             2071               setb C
                    2072     ;       subb A,R3
009A 9B             2073               subb A,R3
                    2074     ;   #pragma ENDASM
                    2075     ;       if (ACC!=0xC0) test_status = 0;
                    2076                             ; SOURCE LINE # 579
009B 64C0           2077             XRL     A,#0C0H
009D 6005           2078             JZ      ?C0149
009F 90007E         2079             MOV     DPTR,#07EH
00A2 E4             2080             CLR     A
00A3 F0             2081             MOVX    @DPTR,A
00A4                2082     ?C0149:
                    2083     ;       if (AC!=0) test_status = 0;
                    2084                             ; SOURCE LINE # 580
00A4 30D605         2085             JNB     AC,?C0150
00A7 90007E         2086             MOV     DPTR,#07EH
00AA E4             2087             CLR     A
00AB F0             2088             MOVX    @DPTR,A
00AC                2089     ?C0150:
                    2090     ;       if (OV!=0) test_status = 0;
                    2091                             ; SOURCE LINE # 581
00AC 30D205         2092             JNB     OV,?C0151
00AF 90007E         2093             MOV     DPTR,#07EH
00B2 E4             2094             CLR     A
00B3 F0             2095             MOVX    @DPTR,A
00B4                2096     ?C0151:
                    2097     ;       if (CY!=1) test_status = 0;
                    2098                             ; SOURCE LINE # 582
00B4 20D705         2099             JB      CY,?C0152
00B7 90007E         2100             MOV     DPTR,#07EH
00BA E4             2101             CLR     A
00BB F0             2102             MOVX    @DPTR,A
00BC                2103     ?C0152:
                    2104     ;       CY = 0; 
                    2105                             ; SOURCE LINE # 583
00BC C2D7           2106             CLR     CY
                    2107     ;       
                    2108     ;       #pragma ASM 
                    2109     ;       pop acc
00BE D0E0           2110               pop acc
                    2111     ;   pop psw     
00C0 D0D0           2112               pop psw       
                    2113     ;   #pragma ENDASM
                    2114     ;   error();  
                    2115                             ; SOURCE LINE # 589
00C2 020000   F     2116             LJMP    error
                    2117     ; END OF subb_a_rn
                    2118     
                    2119     ; }
                    2120     ; 
                    2121     ; void subb_a_di(void) {
                    2122     
----                2123             RSEG  ?PR?subb_a_di?ARITHMETIC
0000                2124     subb_a_di:
                    2125             USING   0
                    2126                             ; SOURCE LINE # 592
                    2127     ;       printf("SUBB_A_DI\n");
                    2128                             ; SOURCE LINE # 593
0000 7BFF           2129             MOV     R3,#0FFH
0002 7A00     F     2130             MOV     R2,#HIGH (?SC_95)
0004 7900     F     2131             MOV     R1,#LOW (?SC_95)
0006 120000   F     2132             LCALL   _printf
                    2133     ;       #pragma ASM  
                    2134     ;       push psw
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    34

0009 C0D0           2135               push psw
                    2136     ;       push acc
000B C0E0           2137               push acc
                    2138     ;   mov  psw,#0H        
000D 75D000         2139               mov  psw,#0H  
                    2140     ;   setb rs0     
0010 D2D3           2141               setb rs0     
                    2142     ;       setb rs1        
0012 D2D4           2143               setb rs1      
                    2144     ;   #pragma ENDASM 
                    2145     ;       
                    2146     ;       #pragma ASM
                    2147     ;       mov acc,#10H
0014 75E010         2148               mov acc,#10H
                    2149     ;       mov R0,#0eH
0017 780E           2150               mov R0,#0eH
                    2151     ;       setb C
0019 D3             2152               setb C
                    2153     ;       subb A,0x18
001A 9518           2154               subb A,0x18
                    2155     ;   #pragma ENDASM      
                    2156     ;       if (ACC!=0x1) test_status = 0;
                    2157                             ; SOURCE LINE # 608
001C 6401           2158             XRL     A,#01H
001E 6005           2159             JZ      ?C0154
0020 90007E         2160             MOV     DPTR,#07EH
0023 E4             2161             CLR     A
0024 F0             2162             MOVX    @DPTR,A
0025                2163     ?C0154:
                    2164     ;       if (AC!=1) test_status = 0;
                    2165                             ; SOURCE LINE # 609
0025 20D605         2166             JB      AC,?C0155
0028 90007E         2167             MOV     DPTR,#07EH
002B E4             2168             CLR     A
002C F0             2169             MOVX    @DPTR,A
002D                2170     ?C0155:
                    2171     ;       if (OV!=0) test_status = 0;
                    2172                             ; SOURCE LINE # 610
002D 30D205         2173             JNB     OV,?C0156
0030 90007E         2174             MOV     DPTR,#07EH
0033 E4             2175             CLR     A
0034 F0             2176             MOVX    @DPTR,A
0035                2177     ?C0156:
                    2178     ;       if (CY!=0) test_status = 0;
                    2179                             ; SOURCE LINE # 611
0035 30D705         2180             JNB     CY,?C0157
0038 90007E         2181             MOV     DPTR,#07EH
003B E4             2182             CLR     A
003C F0             2183             MOVX    @DPTR,A
003D                2184     ?C0157:
                    2185     ;       AC = 0;
                    2186                             ; SOURCE LINE # 612
003D C2D6           2187             CLR     AC
                    2188     ;       
                    2189     ;       #pragma ASM
                    2190     ;       mov acc,#80H
003F 75E080         2191               mov acc,#80H
                    2192     ;       mov R1,#3fH
0042 793F           2193               mov R1,#3fH
                    2194     ;       setb C
0044 D3             2195               setb C
                    2196     ;       subb A,0x19
0045 9519           2197               subb A,0x19
                    2198     ;       #pragma ENDASM
                    2199     ;       if (ACC!=0x40) test_status = 0;
                    2200                             ; SOURCE LINE # 620
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    35

0047 6440           2201             XRL     A,#040H
0049 6005           2202             JZ      ?C0158
004B 90007E         2203             MOV     DPTR,#07EH
004E E4             2204             CLR     A
004F F0             2205             MOVX    @DPTR,A
0050                2206     ?C0158:
                    2207     ;       if (AC!=1) test_status = 0;
                    2208                             ; SOURCE LINE # 621
0050 20D605         2209             JB      AC,?C0159
0053 90007E         2210             MOV     DPTR,#07EH
0056 E4             2211             CLR     A
0057 F0             2212             MOVX    @DPTR,A
0058                2213     ?C0159:
                    2214     ;       if (OV!=1) test_status = 0;
                    2215                             ; SOURCE LINE # 622
0058 20D205         2216             JB      OV,?C0160
005B 90007E         2217             MOV     DPTR,#07EH
005E E4             2218             CLR     A
005F F0             2219             MOVX    @DPTR,A
0060                2220     ?C0160:
                    2221     ;       if (CY!=0) test_status = 0;
                    2222                             ; SOURCE LINE # 623
0060 30D705         2223             JNB     CY,?C0161
0063 90007E         2224             MOV     DPTR,#07EH
0066 E4             2225             CLR     A
0067 F0             2226             MOVX    @DPTR,A
0068                2227     ?C0161:
                    2228     ;       OV = 0;
                    2229                             ; SOURCE LINE # 624
0068 C2D2           2230             CLR     OV
                    2231     ; 
                    2232     ;       
                    2233     ;       #pragma ASM
                    2234     ;   mov acc,#01H
006A 75E001         2235               mov acc,#01H
                    2236     ;       mov R2,#80H
006D 7A80           2237               mov R2,#80H
                    2238     ;       setb C
006F D3             2239               setb C
                    2240     ;       subb A,0x1a
0070 951A           2241               subb A,0x1a
                    2242     ;   #pragma ENDASM
                    2243     ;       if (ACC!=0x80) test_status = 0;
                    2244                             ; SOURCE LINE # 633
0072 6480           2245             XRL     A,#080H
0074 6005           2246             JZ      ?C0162
0076 90007E         2247             MOV     DPTR,#07EH
0079 E4             2248             CLR     A
007A F0             2249             MOVX    @DPTR,A
007B                2250     ?C0162:
                    2251     ;       if (AC!=0) test_status = 0;
                    2252                             ; SOURCE LINE # 634
007B 30D605         2253             JNB     AC,?C0163
007E 90007E         2254             MOV     DPTR,#07EH
0081 E4             2255             CLR     A
0082 F0             2256             MOVX    @DPTR,A
0083                2257     ?C0163:
                    2258     ;       if (OV!=1) test_status = 0;
                    2259                             ; SOURCE LINE # 635
0083 20D205         2260             JB      OV,?C0164
0086 90007E         2261             MOV     DPTR,#07EH
0089 E4             2262             CLR     A
008A F0             2263             MOVX    @DPTR,A
008B                2264     ?C0164:
                    2265     ;       if (CY!=1) test_status = 0;
                    2266                             ; SOURCE LINE # 636
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    36

008B 20D705         2267             JB      CY,?C0165
008E 90007E         2268             MOV     DPTR,#07EH
0091 E4             2269             CLR     A
0092 F0             2270             MOVX    @DPTR,A
0093                2271     ?C0165:
                    2272     ;       OV = 0;
                    2273                             ; SOURCE LINE # 637
0093 C2D2           2274             CLR     OV
                    2275     ;       CY = 0;
                    2276                             ; SOURCE LINE # 638
0095 C2D7           2277             CLR     CY
                    2278     ; 
                    2279     ;       #pragma ASM
                    2280     ;   mov acc,#82H
0097 75E082         2281               mov acc,#82H
                    2282     ;       mov R3,#0C1H
009A 7BC1           2283               mov R3,#0C1H
                    2284     ;       setb C
009C D3             2285               setb C
                    2286     ;       subb A,0x1b
009D 951B           2287               subb A,0x1b
                    2288     ;   #pragma ENDASM
                    2289     ;       if (ACC!=0xC0) test_status = 0;
                    2290                             ; SOURCE LINE # 646
009F 64C0           2291             XRL     A,#0C0H
00A1 6005           2292             JZ      ?C0166
00A3 90007E         2293             MOV     DPTR,#07EH
00A6 E4             2294             CLR     A
00A7 F0             2295             MOVX    @DPTR,A
00A8                2296     ?C0166:
                    2297     ;       if (AC!=0) test_status = 0;
                    2298                             ; SOURCE LINE # 647
00A8 30D605         2299             JNB     AC,?C0167
00AB 90007E         2300             MOV     DPTR,#07EH
00AE E4             2301             CLR     A
00AF F0             2302             MOVX    @DPTR,A
00B0                2303     ?C0167:
                    2304     ;       if (OV!=0) test_status = 0;
                    2305                             ; SOURCE LINE # 648
00B0 30D205         2306             JNB     OV,?C0168
00B3 90007E         2307             MOV     DPTR,#07EH
00B6 E4             2308             CLR     A
00B7 F0             2309             MOVX    @DPTR,A
00B8                2310     ?C0168:
                    2311     ;       if (CY!=1) test_status = 0;
                    2312                             ; SOURCE LINE # 649
00B8 20D705         2313             JB      CY,?C0169
00BB 90007E         2314             MOV     DPTR,#07EH
00BE E4             2315             CLR     A
00BF F0             2316             MOVX    @DPTR,A
00C0                2317     ?C0169:
                    2318     ;       CY = 0; 
                    2319                             ; SOURCE LINE # 650
00C0 C2D7           2320             CLR     CY
                    2321     ;       
                    2322     ;       #pragma ASM 
                    2323     ;       pop acc
00C2 D0E0           2324               pop acc
                    2325     ;   pop psw     
00C4 D0D0           2326               pop psw       
                    2327     ;   #pragma ENDASM
                    2328     ;   error();  
                    2329                             ; SOURCE LINE # 656
00C6 020000   F     2330             LJMP    error
                    2331     ; END OF subb_a_di
                    2332     
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    37

                    2333     ; }
                    2334     ; 
                    2335     ; void subb_a_ri(void) {
                    2336     
----                2337             RSEG  ?PR?subb_a_ri?ARITHMETIC
0000                2338     subb_a_ri:
                    2339             USING   0
                    2340                             ; SOURCE LINE # 659
                    2341     ;       printf("SUBB_A_RI\n");
                    2342                             ; SOURCE LINE # 660
0000 7BFF           2343             MOV     R3,#0FFH
0002 7A00     F     2344             MOV     R2,#HIGH (?SC_106)
0004 7900     F     2345             MOV     R1,#LOW (?SC_106)
0006 120000   F     2346             LCALL   _printf
                    2347     ;       #pragma ASM  
                    2348     ;       push psw
0009 C0D0           2349               push psw
                    2350     ;       push acc
000B C0E0           2351               push acc
                    2352     ;   mov  psw,#0H        
000D 75D000         2353               mov  psw,#0H  
                    2354     ;   setb rs0     
0010 D2D3           2355               setb rs0     
                    2356     ;       setb rs1        
0012 D2D4           2357               setb rs1      
                    2358     ;   #pragma ENDASM 
                    2359     ;       
                    2360     ;       #pragma ASM
                    2361     ;       mov acc,#10H
0014 75E010         2362               mov acc,#10H
                    2363     ;       mov R2,#0eH
0017 7A0E           2364               mov R2,#0eH
                    2365     ;       setb C
0019 D3             2366               setb C
                    2367     ;       mov R0,#1aH
001A 781A           2368               mov R0,#1aH
                    2369     ;       subb A,@R0
001C 96             2370               subb A,@R0
                    2371     ;   #pragma ENDASM      
                    2372     ;       if (ACC!=0x1) test_status = 0;
                    2373                             ; SOURCE LINE # 676
001D 6401           2374             XRL     A,#01H
001F 6005           2375             JZ      ?C0171
0021 90007E         2376             MOV     DPTR,#07EH
0024 E4             2377             CLR     A
0025 F0             2378             MOVX    @DPTR,A
0026                2379     ?C0171:
                    2380     ;       if (AC!=1) test_status = 0;
                    2381                             ; SOURCE LINE # 677
0026 20D605         2382             JB      AC,?C0172
0029 90007E         2383             MOV     DPTR,#07EH
002C E4             2384             CLR     A
002D F0             2385             MOVX    @DPTR,A
002E                2386     ?C0172:
                    2387     ;       if (OV!=0) test_status = 0;
                    2388                             ; SOURCE LINE # 678
002E 30D205         2389             JNB     OV,?C0173
0031 90007E         2390             MOV     DPTR,#07EH
0034 E4             2391             CLR     A
0035 F0             2392             MOVX    @DPTR,A
0036                2393     ?C0173:
                    2394     ;       if (CY!=0) test_status = 0;
                    2395                             ; SOURCE LINE # 679
0036 30D705         2396             JNB     CY,?C0174
0039 90007E         2397             MOV     DPTR,#07EH
003C E4             2398             CLR     A
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    38

003D F0             2399             MOVX    @DPTR,A
003E                2400     ?C0174:
                    2401     ;       AC = 0;
                    2402                             ; SOURCE LINE # 680
003E C2D6           2403             CLR     AC
                    2404     ;       
                    2405     ;       #pragma ASM
                    2406     ;       mov acc,#80H
0040 75E080         2407               mov acc,#80H
                    2408     ;       mov R2,#3fH
0043 7A3F           2409               mov R2,#3fH
                    2410     ;       setb C
0045 D3             2411               setb C
                    2412     ;       mov R0,#1aH
0046 781A           2413               mov R0,#1aH
                    2414     ;       subb A,@R0
0048 96             2415               subb A,@R0
                    2416     ;       #pragma ENDASM
                    2417     ;       if (ACC!=0x40) test_status = 0;
                    2418                             ; SOURCE LINE # 689
0049 6440           2419             XRL     A,#040H
004B 6005           2420             JZ      ?C0175
004D 90007E         2421             MOV     DPTR,#07EH
0050 E4             2422             CLR     A
0051 F0             2423             MOVX    @DPTR,A
0052                2424     ?C0175:
                    2425     ;       if (AC!=1) test_status = 0;
                    2426                             ; SOURCE LINE # 690
0052 20D605         2427             JB      AC,?C0176
0055 90007E         2428             MOV     DPTR,#07EH
0058 E4             2429             CLR     A
0059 F0             2430             MOVX    @DPTR,A
005A                2431     ?C0176:
                    2432     ;       if (OV!=1) test_status = 0;
                    2433                             ; SOURCE LINE # 691
005A 20D205         2434             JB      OV,?C0177
005D 90007E         2435             MOV     DPTR,#07EH
0060 E4             2436             CLR     A
0061 F0             2437             MOVX    @DPTR,A
0062                2438     ?C0177:
                    2439     ;       if (CY!=0) test_status = 0;
                    2440                             ; SOURCE LINE # 692
0062 30D705         2441             JNB     CY,?C0178
0065 90007E         2442             MOV     DPTR,#07EH
0068 E4             2443             CLR     A
0069 F0             2444             MOVX    @DPTR,A
006A                2445     ?C0178:
                    2446     ;       OV = 0;
                    2447                             ; SOURCE LINE # 693
006A C2D2           2448             CLR     OV
                    2449     ; 
                    2450     ;       
                    2451     ;       #pragma ASM
                    2452     ;   mov acc,#01H
006C 75E001         2453               mov acc,#01H
                    2454     ;       mov R3,#80H
006F 7B80           2455               mov R3,#80H
                    2456     ;       setb C
0071 D3             2457               setb C
                    2458     ;       mov R1,#1bH
0072 791B           2459               mov R1,#1bH
                    2460     ;       subb A,@R1
0074 97             2461               subb A,@R1
                    2462     ;   #pragma ENDASM
                    2463     ;       if (ACC!=0x80) test_status = 0;
                    2464                             ; SOURCE LINE # 703
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    39

0075 6480           2465             XRL     A,#080H
0077 6005           2466             JZ      ?C0179
0079 90007E         2467             MOV     DPTR,#07EH
007C E4             2468             CLR     A
007D F0             2469             MOVX    @DPTR,A
007E                2470     ?C0179:
                    2471     ;       if (AC!=0) test_status = 0;
                    2472                             ; SOURCE LINE # 704
007E 30D605         2473             JNB     AC,?C0180
0081 90007E         2474             MOV     DPTR,#07EH
0084 E4             2475             CLR     A
0085 F0             2476             MOVX    @DPTR,A
0086                2477     ?C0180:
                    2478     ;       if (OV!=1) test_status = 0;
                    2479                             ; SOURCE LINE # 705
0086 20D205         2480             JB      OV,?C0181
0089 90007E         2481             MOV     DPTR,#07EH
008C E4             2482             CLR     A
008D F0             2483             MOVX    @DPTR,A
008E                2484     ?C0181:
                    2485     ;       if (CY!=1) test_status = 0;
                    2486                             ; SOURCE LINE # 706
008E 20D705         2487             JB      CY,?C0182
0091 90007E         2488             MOV     DPTR,#07EH
0094 E4             2489             CLR     A
0095 F0             2490             MOVX    @DPTR,A
0096                2491     ?C0182:
                    2492     ;       OV = 0;
                    2493                             ; SOURCE LINE # 707
0096 C2D2           2494             CLR     OV
                    2495     ;       CY = 0;
                    2496                             ; SOURCE LINE # 708
0098 C2D7           2497             CLR     CY
                    2498     ; 
                    2499     ;       #pragma ASM
                    2500     ;   mov acc,#82H
009A 75E082         2501               mov acc,#82H
                    2502     ;       mov R3,#0C1H
009D 7BC1           2503               mov R3,#0C1H
                    2504     ;       setb C
009F D3             2505               setb C
                    2506     ;       mov R1,#1bH
00A0 791B           2507               mov R1,#1bH
                    2508     ;       subb A,@R1
00A2 97             2509               subb A,@R1
                    2510     ;   #pragma ENDASM
                    2511     ;       if (ACC!=0xC0) test_status = 0;
                    2512                             ; SOURCE LINE # 717
00A3 64C0           2513             XRL     A,#0C0H
00A5 6005           2514             JZ      ?C0183
00A7 90007E         2515             MOV     DPTR,#07EH
00AA E4             2516             CLR     A
00AB F0             2517             MOVX    @DPTR,A
00AC                2518     ?C0183:
                    2519     ;       if (AC!=0) test_status = 0;
                    2520                             ; SOURCE LINE # 718
00AC 30D605         2521             JNB     AC,?C0184
00AF 90007E         2522             MOV     DPTR,#07EH
00B2 E4             2523             CLR     A
00B3 F0             2524             MOVX    @DPTR,A
00B4                2525     ?C0184:
                    2526     ;       if (OV!=0) test_status = 0;
                    2527                             ; SOURCE LINE # 719
00B4 30D205         2528             JNB     OV,?C0185
00B7 90007E         2529             MOV     DPTR,#07EH
00BA E4             2530             CLR     A
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    40

00BB F0             2531             MOVX    @DPTR,A
00BC                2532     ?C0185:
                    2533     ;       if (CY!=1) test_status = 0;
                    2534                             ; SOURCE LINE # 720
00BC 20D705         2535             JB      CY,?C0186
00BF 90007E         2536             MOV     DPTR,#07EH
00C2 E4             2537             CLR     A
00C3 F0             2538             MOVX    @DPTR,A
00C4                2539     ?C0186:
                    2540     ;       CY = 0; 
                    2541                             ; SOURCE LINE # 721
00C4 C2D7           2542             CLR     CY
                    2543     ;       
                    2544     ;       #pragma ASM 
                    2545     ;       pop acc
00C6 D0E0           2546               pop acc
                    2547     ;   pop psw     
00C8 D0D0           2548               pop psw       
                    2549     ;   #pragma ENDASM
                    2550     ;   error();  
                    2551                             ; SOURCE LINE # 727
00CA 020000   F     2552             LJMP    error
                    2553     ; END OF subb_a_ri
                    2554     
                    2555     ; }
                    2556     ; 
                    2557     ; void subb_a_da(void) {
                    2558     
----                2559             RSEG  ?PR?subb_a_da?ARITHMETIC
0000                2560     subb_a_da:
                    2561             USING   0
                    2562                             ; SOURCE LINE # 730
                    2563     ;       printf("SUBB_A_DA\n");
                    2564                             ; SOURCE LINE # 731
0000 7BFF           2565             MOV     R3,#0FFH
0002 7A00     F     2566             MOV     R2,#HIGH (?SC_117)
0004 7900     F     2567             MOV     R1,#LOW (?SC_117)
0006 120000   F     2568             LCALL   _printf
                    2569     ;       #pragma ASM  
                    2570     ;       push psw
0009 C0D0           2571               push psw
                    2572     ;       push acc
000B C0E0           2573               push acc
                    2574     ;   mov  psw,#0H        
000D 75D000         2575               mov  psw,#0H  
                    2576     ;   setb rs0     
0010 D2D3           2577               setb rs0     
                    2578     ;       setb rs1        
0012 D2D4           2579               setb rs1      
                    2580     ;   #pragma ENDASM 
                    2581     ;       
                    2582     ;       #pragma ASM
                    2583     ;       mov acc,#10H
0014 75E010         2584               mov acc,#10H
                    2585     ;       setb C
0017 D3             2586               setb C
                    2587     ;       subb A,#0eH
0018 940E           2588               subb A,#0eH
                    2589     ;   #pragma ENDASM      
                    2590     ;       if (ACC!=0x1) test_status = 0;
                    2591                             ; SOURCE LINE # 745
001A 6401           2592             XRL     A,#01H
001C 6005           2593             JZ      ?C0188
001E 90007E         2594             MOV     DPTR,#07EH
0021 E4             2595             CLR     A
0022 F0             2596             MOVX    @DPTR,A
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    41

0023                2597     ?C0188:
                    2598     ;       if (AC!=1) test_status = 0;
                    2599                             ; SOURCE LINE # 746
0023 20D605         2600             JB      AC,?C0189
0026 90007E         2601             MOV     DPTR,#07EH
0029 E4             2602             CLR     A
002A F0             2603             MOVX    @DPTR,A
002B                2604     ?C0189:
                    2605     ;       if (OV!=0) test_status = 0;
                    2606                             ; SOURCE LINE # 747
002B 30D205         2607             JNB     OV,?C0190
002E 90007E         2608             MOV     DPTR,#07EH
0031 E4             2609             CLR     A
0032 F0             2610             MOVX    @DPTR,A
0033                2611     ?C0190:
                    2612     ;       if (CY!=0) test_status = 0;
                    2613                             ; SOURCE LINE # 748
0033 30D705         2614             JNB     CY,?C0191
0036 90007E         2615             MOV     DPTR,#07EH
0039 E4             2616             CLR     A
003A F0             2617             MOVX    @DPTR,A
003B                2618     ?C0191:
                    2619     ;       AC = 0;
                    2620                             ; SOURCE LINE # 749
003B C2D6           2621             CLR     AC
                    2622     ;       
                    2623     ;       #pragma ASM
                    2624     ;       mov acc,#80H
003D 75E080         2625               mov acc,#80H
                    2626     ;       setb C
0040 D3             2627               setb C
                    2628     ;       subb A,#3fH
0041 943F           2629               subb A,#3fH
                    2630     ;       #pragma ENDASM
                    2631     ;       if (ACC!=0x40) test_status = 0;
                    2632                             ; SOURCE LINE # 756
0043 6440           2633             XRL     A,#040H
0045 6005           2634             JZ      ?C0192
0047 90007E         2635             MOV     DPTR,#07EH
004A E4             2636             CLR     A
004B F0             2637             MOVX    @DPTR,A
004C                2638     ?C0192:
                    2639     ;       if (AC!=1) test_status = 0;
                    2640                             ; SOURCE LINE # 757
004C 20D605         2641             JB      AC,?C0193
004F 90007E         2642             MOV     DPTR,#07EH
0052 E4             2643             CLR     A
0053 F0             2644             MOVX    @DPTR,A
0054                2645     ?C0193:
                    2646     ;       if (OV!=1) test_status = 0;
                    2647                             ; SOURCE LINE # 758
0054 20D205         2648             JB      OV,?C0194
0057 90007E         2649             MOV     DPTR,#07EH
005A E4             2650             CLR     A
005B F0             2651             MOVX    @DPTR,A
005C                2652     ?C0194:
                    2653     ;       if (CY!=0) test_status = 0;
                    2654                             ; SOURCE LINE # 759
005C 30D705         2655             JNB     CY,?C0195
005F 90007E         2656             MOV     DPTR,#07EH
0062 E4             2657             CLR     A
0063 F0             2658             MOVX    @DPTR,A
0064                2659     ?C0195:
                    2660     ;       OV = 0;
                    2661                             ; SOURCE LINE # 760
0064 C2D2           2662             CLR     OV
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    42

                    2663     ; 
                    2664     ;       
                    2665     ;       #pragma ASM
                    2666     ;   mov acc,#01H
0066 75E001         2667               mov acc,#01H
                    2668     ;       setb C
0069 D3             2669               setb C
                    2670     ;       subb A,#80H
006A 9480           2671               subb A,#80H
                    2672     ;   #pragma ENDASM
                    2673     ;       if (ACC!=0x80) test_status = 0;
                    2674                             ; SOURCE LINE # 768
006C 6480           2675             XRL     A,#080H
006E 6005           2676             JZ      ?C0196
0070 90007E         2677             MOV     DPTR,#07EH
0073 E4             2678             CLR     A
0074 F0             2679             MOVX    @DPTR,A
0075                2680     ?C0196:
                    2681     ;       if (AC!=0) test_status = 0;
                    2682                             ; SOURCE LINE # 769
0075 30D605         2683             JNB     AC,?C0197
0078 90007E         2684             MOV     DPTR,#07EH
007B E4             2685             CLR     A
007C F0             2686             MOVX    @DPTR,A
007D                2687     ?C0197:
                    2688     ;       if (OV!=1) test_status = 0;
                    2689                             ; SOURCE LINE # 770
007D 20D205         2690             JB      OV,?C0198
0080 90007E         2691             MOV     DPTR,#07EH
0083 E4             2692             CLR     A
0084 F0             2693             MOVX    @DPTR,A
0085                2694     ?C0198:
                    2695     ;       if (CY!=1) test_status = 0;
                    2696                             ; SOURCE LINE # 771
0085 20D705         2697             JB      CY,?C0199
0088 90007E         2698             MOV     DPTR,#07EH
008B E4             2699             CLR     A
008C F0             2700             MOVX    @DPTR,A
008D                2701     ?C0199:
                    2702     ;       OV = 0;
                    2703                             ; SOURCE LINE # 772
008D C2D2           2704             CLR     OV
                    2705     ;       CY = 0;
                    2706                             ; SOURCE LINE # 773
008F C2D7           2707             CLR     CY
                    2708     ; 
                    2709     ;       #pragma ASM
                    2710     ;   mov acc,#82H
0091 75E082         2711               mov acc,#82H
                    2712     ;       setb C
0094 D3             2713               setb C
                    2714     ;       subb A,#0C1H
0095 94C1           2715               subb A,#0C1H
                    2716     ;   #pragma ENDASM
                    2717     ;       if (ACC!=0xC0) test_status = 0;
                    2718                             ; SOURCE LINE # 780
0097 64C0           2719             XRL     A,#0C0H
0099 6005           2720             JZ      ?C0200
009B 90007E         2721             MOV     DPTR,#07EH
009E E4             2722             CLR     A
009F F0             2723             MOVX    @DPTR,A
00A0                2724     ?C0200:
                    2725     ;       if (AC!=0) test_status = 0;
                    2726                             ; SOURCE LINE # 781
00A0 30D605         2727             JNB     AC,?C0201
00A3 90007E         2728             MOV     DPTR,#07EH
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    43

00A6 E4             2729             CLR     A
00A7 F0             2730             MOVX    @DPTR,A
00A8                2731     ?C0201:
                    2732     ;       if (OV!=0) test_status = 0;
                    2733                             ; SOURCE LINE # 782
00A8 30D205         2734             JNB     OV,?C0202
00AB 90007E         2735             MOV     DPTR,#07EH
00AE E4             2736             CLR     A
00AF F0             2737             MOVX    @DPTR,A
00B0                2738     ?C0202:
                    2739     ;       if (CY!=1) test_status = 0;
                    2740                             ; SOURCE LINE # 783
00B0 20D705         2741             JB      CY,?C0203
00B3 90007E         2742             MOV     DPTR,#07EH
00B6 E4             2743             CLR     A
00B7 F0             2744             MOVX    @DPTR,A
00B8                2745     ?C0203:
                    2746     ;       CY = 0; 
                    2747                             ; SOURCE LINE # 784
00B8 C2D7           2748             CLR     CY
                    2749     ;       
                    2750     ;       #pragma ASM 
                    2751     ;       pop acc
00BA D0E0           2752               pop acc
                    2753     ;   pop psw     
00BC D0D0           2754               pop psw       
                    2755     ;   #pragma ENDASM
                    2756     ;   error();  
                    2757                             ; SOURCE LINE # 790
00BE 020000   F     2758             LJMP    error
                    2759     ; END OF subb_a_da
                    2760     
                    2761     ; }
                    2762     ; 
                    2763     ; 
                    2764     ; void inc_a(void) {
                    2765     
----                2766             RSEG  ?PR?inc_a?ARITHMETIC
0000                2767     inc_a:
                    2768             USING   0
                    2769                             ; SOURCE LINE # 794
                    2770     ;       printf("INC_A\n");
                    2771                             ; SOURCE LINE # 795
0000 7BFF           2772             MOV     R3,#0FFH
0002 7A00     F     2773             MOV     R2,#HIGH (?SC_128)
0004 7900     F     2774             MOV     R1,#LOW (?SC_128)
0006 120000   F     2775             LCALL   _printf
                    2776     ;       #pragma ASM  
                    2777     ;       push psw
0009 C0D0           2778               push psw
                    2779     ;       push acc
000B C0E0           2780               push acc
                    2781     ;   mov  psw,#0H        
000D 75D000         2782               mov  psw,#0H  
                    2783     ;   setb rs0     
0010 D2D3           2784               setb rs0     
                    2785     ;       setb rs1        
0012 D2D4           2786               setb rs1      
                    2787     ;   #pragma ENDASM 
                    2788     ;       
                    2789     ;       #pragma ASM
                    2790     ;       mov acc,#0a5H
0014 75E0A5         2791               mov acc,#0a5H
                    2792     ;       inc A
0017 04             2793               inc A
                    2794     ;   #pragma ENDASM      
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    44

                    2795     ;       if (ACC!=0xa6) test_status = 0;
                    2796                             ; SOURCE LINE # 808
0018 64A6           2797             XRL     A,#0A6H
001A 6005           2798             JZ      ?C0205
001C 90007E         2799             MOV     DPTR,#07EH
001F E4             2800             CLR     A
0020 F0             2801             MOVX    @DPTR,A
0021                2802     ?C0205:
                    2803     ;       if (AC!=0) test_status = 0;
                    2804                             ; SOURCE LINE # 809
0021 30D605         2805             JNB     AC,?C0206
0024 90007E         2806             MOV     DPTR,#07EH
0027 E4             2807             CLR     A
0028 F0             2808             MOVX    @DPTR,A
0029                2809     ?C0206:
                    2810     ;       if (OV!=0) test_status = 0;
                    2811                             ; SOURCE LINE # 810
0029 30D205         2812             JNB     OV,?C0207
002C 90007E         2813             MOV     DPTR,#07EH
002F E4             2814             CLR     A
0030 F0             2815             MOVX    @DPTR,A
0031                2816     ?C0207:
                    2817     ;       if (CY!=0) test_status = 0;
                    2818                             ; SOURCE LINE # 811
0031 30D705         2819             JNB     CY,?C0208
0034 90007E         2820             MOV     DPTR,#07EH
0037 E4             2821             CLR     A
0038 F0             2822             MOVX    @DPTR,A
0039                2823     ?C0208:
                    2824     ; 
                    2825     ;       
                    2826     ;       #pragma ASM 
                    2827     ;       pop acc
0039 D0E0           2828               pop acc
                    2829     ;   pop psw     
003B D0D0           2830               pop psw       
                    2831     ;   #pragma ENDASM
                    2832     ;   error();  
                    2833                             ; SOURCE LINE # 818
003D 020000   F     2834             LJMP    error
                    2835     ; END OF inc_a
                    2836     
                    2837     ; }
                    2838     ; 
                    2839     ; void inc_rn(void) {
                    2840     
----                2841             RSEG  ?PR?inc_rn?ARITHMETIC
0000                2842     inc_rn:
                    2843             USING   0
                    2844                             ; SOURCE LINE # 821
                    2845     ;       printf("INC_RN\n");
                    2846                             ; SOURCE LINE # 822
0000 7BFF           2847             MOV     R3,#0FFH
0002 7A00     F     2848             MOV     R2,#HIGH (?SC_135)
0004 7900     F     2849             MOV     R1,#LOW (?SC_135)
0006 120000   F     2850             LCALL   _printf
                    2851     ;       #pragma ASM  
                    2852     ;       push psw
0009 C0D0           2853               push psw
                    2854     ;       push acc
000B C0E0           2855               push acc
                    2856     ;   mov  psw,#0H        
000D 75D000         2857               mov  psw,#0H  
                    2858     ;   setb rs0     
0010 D2D3           2859               setb rs0     
                    2860     ;       setb rs1        
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    45

0012 D2D4           2861               setb rs1      
                    2862     ;   #pragma ENDASM 
                    2863     ;       
                    2864     ;       #pragma ASM
                    2865     ;       mov 0x1b,#0a5H
0014 751BA5         2866               mov 0x1b,#0a5H
                    2867     ;       inc R3
0017 0B             2868               inc R3
                    2869     ;   #pragma ENDASM      
                    2870     ;       if (R(3,3)!=0xa6) test_status = 0;
                    2871                             ; SOURCE LINE # 835
0018 781B           2872             MOV     R0,#01BH
001A E6             2873             MOV     A,@R0
001B 64A6           2874             XRL     A,#0A6H
001D 6005           2875             JZ      ?C0210
001F 90007E         2876             MOV     DPTR,#07EH
0022 E4             2877             CLR     A
0023 F0             2878             MOVX    @DPTR,A
0024                2879     ?C0210:
                    2880     ;       if (AC!=0) test_status = 0;
                    2881                             ; SOURCE LINE # 836
0024 30D605         2882             JNB     AC,?C0211
0027 90007E         2883             MOV     DPTR,#07EH
002A E4             2884             CLR     A
002B F0             2885             MOVX    @DPTR,A
002C                2886     ?C0211:
                    2887     ;       if (OV!=0) test_status = 0;
                    2888                             ; SOURCE LINE # 837
002C 30D205         2889             JNB     OV,?C0212
002F 90007E         2890             MOV     DPTR,#07EH
0032 E4             2891             CLR     A
0033 F0             2892             MOVX    @DPTR,A
0034                2893     ?C0212:
                    2894     ;       if (CY!=0) test_status = 0;
                    2895                             ; SOURCE LINE # 838
0034 30D705         2896             JNB     CY,?C0213
0037 90007E         2897             MOV     DPTR,#07EH
003A E4             2898             CLR     A
003B F0             2899             MOVX    @DPTR,A
003C                2900     ?C0213:
                    2901     ; 
                    2902     ;       
                    2903     ;       #pragma ASM 
                    2904     ;       pop acc
003C D0E0           2905               pop acc
                    2906     ;   pop psw     
003E D0D0           2907               pop psw       
                    2908     ;   #pragma ENDASM
                    2909     ;   error();  
                    2910                             ; SOURCE LINE # 845
0040 020000   F     2911             LJMP    error
                    2912     ; END OF inc_rn
                    2913     
                    2914     ; }
                    2915     ; 
                    2916     ; void inc_di(void) {
                    2917     
----                2918             RSEG  ?PR?inc_di?ARITHMETIC
0000                2919     inc_di:
                    2920             USING   0
                    2921                             ; SOURCE LINE # 848
                    2922     ;       printf("INC_DI\n");
                    2923                             ; SOURCE LINE # 849
0000 7BFF           2924             MOV     R3,#0FFH
0002 7A00     F     2925             MOV     R2,#HIGH (?SC_143)
0004 7900     F     2926             MOV     R1,#LOW (?SC_143)
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    46

0006 120000   F     2927             LCALL   _printf
                    2928     ;       #pragma ASM  
                    2929     ;       push psw
0009 C0D0           2930               push psw
                    2931     ;       push acc
000B C0E0           2932               push acc
                    2933     ;   mov  psw,#0H        
000D 75D000         2934               mov  psw,#0H  
                    2935     ;   setb rs0     
0010 D2D3           2936               setb rs0     
                    2937     ;       setb rs1        
0012 D2D4           2938               setb rs1      
                    2939     ;   #pragma ENDASM 
                    2940     ;       
                    2941     ;       #pragma ASM
                    2942     ;       mov 0x1c,#0a5H
0014 751CA5         2943               mov 0x1c,#0a5H
                    2944     ;       inc 0x1c
0017 051C           2945               inc 0x1c
                    2946     ;   #pragma ENDASM      
                    2947     ;       if (R(3,4)!=0xa6) test_status = 0;
                    2948                             ; SOURCE LINE # 862
0019 781C           2949             MOV     R0,#01CH
001B E6             2950             MOV     A,@R0
001C 64A6           2951             XRL     A,#0A6H
001E 6005           2952             JZ      ?C0215
0020 90007E         2953             MOV     DPTR,#07EH
0023 E4             2954             CLR     A
0024 F0             2955             MOVX    @DPTR,A
0025                2956     ?C0215:
                    2957     ;       if (AC!=0) test_status = 0;
                    2958                             ; SOURCE LINE # 863
0025 30D605         2959             JNB     AC,?C0216
0028 90007E         2960             MOV     DPTR,#07EH
002B E4             2961             CLR     A
002C F0             2962             MOVX    @DPTR,A
002D                2963     ?C0216:
                    2964     ;       if (OV!=0) test_status = 0;
                    2965                             ; SOURCE LINE # 864
002D 30D205         2966             JNB     OV,?C0217
0030 90007E         2967             MOV     DPTR,#07EH
0033 E4             2968             CLR     A
0034 F0             2969             MOVX    @DPTR,A
0035                2970     ?C0217:
                    2971     ;       if (CY!=0) test_status = 0;
                    2972                             ; SOURCE LINE # 865
0035 30D705         2973             JNB     CY,?C0218
0038 90007E         2974             MOV     DPTR,#07EH
003B E4             2975             CLR     A
003C F0             2976             MOVX    @DPTR,A
003D                2977     ?C0218:
                    2978     ; 
                    2979     ;       
                    2980     ;       #pragma ASM 
                    2981     ;       pop acc
003D D0E0           2982               pop acc
                    2983     ;   pop psw     
003F D0D0           2984               pop psw       
                    2985     ;   #pragma ENDASM
                    2986     ;   error();  
                    2987                             ; SOURCE LINE # 872
0041 020000   F     2988             LJMP    error
                    2989     ; END OF inc_di
                    2990     
                    2991     ; }
                    2992     ; 
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    47

                    2993     ; void inc_ri(void) {
                    2994     
----                2995             RSEG  ?PR?inc_ri?ARITHMETIC
0000                2996     inc_ri:
                    2997             USING   0
                    2998                             ; SOURCE LINE # 875
                    2999     ;       printf("INC_RI\n");
                    3000                             ; SOURCE LINE # 876
0000 7BFF           3001             MOV     R3,#0FFH
0002 7A00     F     3002             MOV     R2,#HIGH (?SC_151)
0004 7900     F     3003             MOV     R1,#LOW (?SC_151)
0006 120000   F     3004             LCALL   _printf
                    3005     ;       #pragma ASM  
                    3006     ;       push psw
0009 C0D0           3007               push psw
                    3008     ;       push acc
000B C0E0           3009               push acc
                    3010     ;   mov  psw,#0H        
000D 75D000         3011               mov  psw,#0H  
                    3012     ;   setb rs0     
0010 D2D3           3013               setb rs0     
                    3014     ;       setb rs1        
0012 D2D4           3015               setb rs1      
                    3016     ;   #pragma ENDASM 
                    3017     ;       
                    3018     ;       #pragma ASM
                    3019     ;       mov 0x1c,#0a5H
0014 751CA5         3020               mov 0x1c,#0a5H
                    3021     ;       mov R1,#1cH
0017 791C           3022               mov R1,#1cH
                    3023     ;       inc @R1
0019 07             3024               inc @R1
                    3025     ;   #pragma ENDASM      
                    3026     ;       if (R(3,4)!=0xa6) test_status = 0;
                    3027                             ; SOURCE LINE # 890
001A 781C           3028             MOV     R0,#01CH
001C E6             3029             MOV     A,@R0
001D 64A6           3030             XRL     A,#0A6H
001F 6005           3031             JZ      ?C0220
0021 90007E         3032             MOV     DPTR,#07EH
0024 E4             3033             CLR     A
0025 F0             3034             MOVX    @DPTR,A
0026                3035     ?C0220:
                    3036     ;       if (AC!=0) test_status = 0;
                    3037                             ; SOURCE LINE # 891
0026 30D605         3038             JNB     AC,?C0221
0029 90007E         3039             MOV     DPTR,#07EH
002C E4             3040             CLR     A
002D F0             3041             MOVX    @DPTR,A
002E                3042     ?C0221:
                    3043     ;       if (OV!=0) test_status = 0;
                    3044                             ; SOURCE LINE # 892
002E 30D205         3045             JNB     OV,?C0222
0031 90007E         3046             MOV     DPTR,#07EH
0034 E4             3047             CLR     A
0035 F0             3048             MOVX    @DPTR,A
0036                3049     ?C0222:
                    3050     ;       if (CY!=0) test_status = 0;
                    3051                             ; SOURCE LINE # 893
0036 30D705         3052             JNB     CY,?C0223
0039 90007E         3053             MOV     DPTR,#07EH
003C E4             3054             CLR     A
003D F0             3055             MOVX    @DPTR,A
003E                3056     ?C0223:
                    3057     ; 
                    3058     ;       
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    48

                    3059     ;       #pragma ASM 
                    3060     ;       pop acc
003E D0E0           3061               pop acc
                    3062     ;   pop psw     
0040 D0D0           3063               pop psw       
                    3064     ;   #pragma ENDASM
                    3065     ;   error();  
                    3066                             ; SOURCE LINE # 900
0042 020000   F     3067             LJMP    error
                    3068     ; END OF inc_ri
                    3069     
                    3070     ; }
                    3071     ; 
                    3072     ; 
                    3073     ; void inc_dp(void) {
                    3074     
----                3075             RSEG  ?PR?inc_dp?ARITHMETIC
0000                3076     inc_dp:
                    3077             USING   0
                    3078                             ; SOURCE LINE # 904
                    3079     ;       printf("INC_DP\n");
                    3080                             ; SOURCE LINE # 905
0000 7BFF           3081             MOV     R3,#0FFH
0002 7A00     F     3082             MOV     R2,#HIGH (?SC_159)
0004 7900     F     3083             MOV     R1,#LOW (?SC_159)
0006 120000   F     3084             LCALL   _printf
                    3085     ;       #pragma ASM  
                    3086     ;       push psw
0009 C0D0           3087               push psw
                    3088     ;       push acc
000B C0E0           3089               push acc
                    3090     ;   mov  psw,#0H        
000D 75D000         3091               mov  psw,#0H  
                    3092     ;   setb rs0     
0010 D2D3           3093               setb rs0     
                    3094     ;       setb rs1        
0012 D2D4           3095               setb rs1      
                    3096     ;   #pragma ENDASM 
                    3097     ;       
                    3098     ;       #pragma ASM
                    3099     ;       mov DPTR,#1234H
0014 901234         3100               mov DPTR,#1234H
                    3101     ;       inc DPTR
0017 A3             3102               inc DPTR
                    3103     ;   #pragma ENDASM      
                    3104     ;       if (DPL!=0x35) test_status = 0;
                    3105                             ; SOURCE LINE # 918
0018 E582           3106             MOV     A,DPL
001A 6435           3107             XRL     A,#035H
001C 6005           3108             JZ      ?C0225
001E 90007E         3109             MOV     DPTR,#07EH
0021 E4             3110             CLR     A
0022 F0             3111             MOVX    @DPTR,A
0023                3112     ?C0225:
                    3113     ;       if (DPH!=0x12) test_status = 0;
                    3114                             ; SOURCE LINE # 919
0023 E583           3115             MOV     A,DPH
0025 6412           3116             XRL     A,#012H
0027 6005           3117             JZ      ?C0226
0029 90007E         3118             MOV     DPTR,#07EH
002C E4             3119             CLR     A
002D F0             3120             MOVX    @DPTR,A
002E                3121     ?C0226:
                    3122     ;       if (AC!=0) test_status = 0;
                    3123                             ; SOURCE LINE # 920
002E 30D605         3124             JNB     AC,?C0227
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    49

0031 90007E         3125             MOV     DPTR,#07EH
0034 E4             3126             CLR     A
0035 F0             3127             MOVX    @DPTR,A
0036                3128     ?C0227:
                    3129     ;       if (OV!=0) test_status = 0;
                    3130                             ; SOURCE LINE # 921
0036 30D205         3131             JNB     OV,?C0228
0039 90007E         3132             MOV     DPTR,#07EH
003C E4             3133             CLR     A
003D F0             3134             MOVX    @DPTR,A
003E                3135     ?C0228:
                    3136     ;       if (CY!=0) test_status = 0;
                    3137                             ; SOURCE LINE # 922
003E 30D705         3138             JNB     CY,?C0229
0041 90007E         3139             MOV     DPTR,#07EH
0044 E4             3140             CLR     A
0045 F0             3141             MOVX    @DPTR,A
0046                3142     ?C0229:
                    3143     ; 
                    3144     ;       
                    3145     ;       #pragma ASM 
                    3146     ;       pop acc
0046 D0E0           3147               pop acc
                    3148     ;   pop psw     
0048 D0D0           3149               pop psw       
                    3150     ;   #pragma ENDASM
                    3151     ;   error();  
                    3152                             ; SOURCE LINE # 929
004A 020000   F     3153             LJMP    error
                    3154     ; END OF inc_dp
                    3155     
                    3156     ; }
                    3157     ; 
                    3158     ; 
                    3159     ; void dec_a(void) {
                    3160     
----                3161             RSEG  ?PR?dec_a?ARITHMETIC
0000                3162     dec_a:
                    3163             USING   0
                    3164                             ; SOURCE LINE # 933
                    3165     ;       printf("DEC_A\n");
                    3166                             ; SOURCE LINE # 934
0000 7BFF           3167             MOV     R3,#0FFH
0002 7A00     F     3168             MOV     R2,#HIGH (?SC_167)
0004 7900     F     3169             MOV     R1,#LOW (?SC_167)
0006 120000   F     3170             LCALL   _printf
                    3171     ;       #pragma ASM  
                    3172     ;       push psw
0009 C0D0           3173               push psw
                    3174     ;       push acc
000B C0E0           3175               push acc
                    3176     ;   mov  psw,#0H        
000D 75D000         3177               mov  psw,#0H  
                    3178     ;   setb rs0     
0010 D2D3           3179               setb rs0     
                    3180     ;       setb rs1        
0012 D2D4           3181               setb rs1      
                    3182     ;   #pragma ENDASM 
                    3183     ;       
                    3184     ;       #pragma ASM
                    3185     ;       mov acc,#0a5H
0014 75E0A5         3186               mov acc,#0a5H
                    3187     ;       dec A
0017 14             3188               dec A
                    3189     ;   #pragma ENDASM      
                    3190     ;       if (ACC!=0xa4) test_status = 0;
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    50

                    3191                             ; SOURCE LINE # 947
0018 64A4           3192             XRL     A,#0A4H
001A 6005           3193             JZ      ?C0231
001C 90007E         3194             MOV     DPTR,#07EH
001F E4             3195             CLR     A
0020 F0             3196             MOVX    @DPTR,A
0021                3197     ?C0231:
                    3198     ;       if (AC!=0) test_status = 0;
                    3199                             ; SOURCE LINE # 948
0021 30D605         3200             JNB     AC,?C0232
0024 90007E         3201             MOV     DPTR,#07EH
0027 E4             3202             CLR     A
0028 F0             3203             MOVX    @DPTR,A
0029                3204     ?C0232:
                    3205     ;       if (OV!=0) test_status = 0;
                    3206                             ; SOURCE LINE # 949
0029 30D205         3207             JNB     OV,?C0233
002C 90007E         3208             MOV     DPTR,#07EH
002F E4             3209             CLR     A
0030 F0             3210             MOVX    @DPTR,A
0031                3211     ?C0233:
                    3212     ;       if (CY!=0) test_status = 0;
                    3213                             ; SOURCE LINE # 950
0031 30D705         3214             JNB     CY,?C0234
0034 90007E         3215             MOV     DPTR,#07EH
0037 E4             3216             CLR     A
0038 F0             3217             MOVX    @DPTR,A
0039                3218     ?C0234:
                    3219     ; 
                    3220     ;       
                    3221     ;       #pragma ASM 
                    3222     ;       pop acc
0039 D0E0           3223               pop acc
                    3224     ;   pop psw     
003B D0D0           3225               pop psw       
                    3226     ;   #pragma ENDASM
                    3227     ;   error();  
                    3228                             ; SOURCE LINE # 957
003D 020000   F     3229             LJMP    error
                    3230     ; END OF dec_a
                    3231     
                    3232     ; }
                    3233     ; 
                    3234     ; void dec_rn(void) {
                    3235     
----                3236             RSEG  ?PR?dec_rn?ARITHMETIC
0000                3237     dec_rn:
                    3238             USING   0
                    3239                             ; SOURCE LINE # 960
                    3240     ;       printf("DEC_RN\n");
                    3241                             ; SOURCE LINE # 961
0000 7BFF           3242             MOV     R3,#0FFH
0002 7A00     F     3243             MOV     R2,#HIGH (?SC_174)
0004 7900     F     3244             MOV     R1,#LOW (?SC_174)
0006 120000   F     3245             LCALL   _printf
                    3246     ;       #pragma ASM  
                    3247     ;       push psw
0009 C0D0           3248               push psw
                    3249     ;       push acc
000B C0E0           3250               push acc
                    3251     ;   mov  psw,#0H        
000D 75D000         3252               mov  psw,#0H  
                    3253     ;   setb rs0     
0010 D2D3           3254               setb rs0     
                    3255     ;       setb rs1        
0012 D2D4           3256               setb rs1      
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    51

                    3257     ;   #pragma ENDASM 
                    3258     ;       
                    3259     ;       #pragma ASM
                    3260     ;       mov 0x1b,#0a5H
0014 751BA5         3261               mov 0x1b,#0a5H
                    3262     ;       dec R3
0017 1B             3263               dec R3
                    3264     ;   #pragma ENDASM      
                    3265     ;       if (R(3,3)!=0xa4) test_status = 0;
                    3266                             ; SOURCE LINE # 974
0018 781B           3267             MOV     R0,#01BH
001A E6             3268             MOV     A,@R0
001B 64A4           3269             XRL     A,#0A4H
001D 6005           3270             JZ      ?C0236
001F 90007E         3271             MOV     DPTR,#07EH
0022 E4             3272             CLR     A
0023 F0             3273             MOVX    @DPTR,A
0024                3274     ?C0236:
                    3275     ;       if (AC!=0) test_status = 0;
                    3276                             ; SOURCE LINE # 975
0024 30D605         3277             JNB     AC,?C0237
0027 90007E         3278             MOV     DPTR,#07EH
002A E4             3279             CLR     A
002B F0             3280             MOVX    @DPTR,A
002C                3281     ?C0237:
                    3282     ;       if (OV!=0) test_status = 0;
                    3283                             ; SOURCE LINE # 976
002C 30D205         3284             JNB     OV,?C0238
002F 90007E         3285             MOV     DPTR,#07EH
0032 E4             3286             CLR     A
0033 F0             3287             MOVX    @DPTR,A
0034                3288     ?C0238:
                    3289     ;       if (CY!=0) test_status = 0;
                    3290                             ; SOURCE LINE # 977
0034 30D705         3291             JNB     CY,?C0239
0037 90007E         3292             MOV     DPTR,#07EH
003A E4             3293             CLR     A
003B F0             3294             MOVX    @DPTR,A
003C                3295     ?C0239:
                    3296     ; 
                    3297     ;       
                    3298     ;       #pragma ASM 
                    3299     ;       pop acc
003C D0E0           3300               pop acc
                    3301     ;   pop psw     
003E D0D0           3302               pop psw       
                    3303     ;   #pragma ENDASM
                    3304     ;   error();  
                    3305                             ; SOURCE LINE # 984
0040 020000   F     3306             LJMP    error
                    3307     ; END OF dec_rn
                    3308     
                    3309     ; }
                    3310     ; 
                    3311     ; void dec_di(void) {
                    3312     
----                3313             RSEG  ?PR?dec_di?ARITHMETIC
0000                3314     dec_di:
                    3315             USING   0
                    3316                             ; SOURCE LINE # 987
                    3317     ;       printf("DEC_DI\n");
                    3318                             ; SOURCE LINE # 988
0000 7BFF           3319             MOV     R3,#0FFH
0002 7A00     F     3320             MOV     R2,#HIGH (?SC_182)
0004 7900     F     3321             MOV     R1,#LOW (?SC_182)
0006 120000   F     3322             LCALL   _printf
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    52

                    3323     ;       #pragma ASM  
                    3324     ;       push psw
0009 C0D0           3325               push psw
                    3326     ;       push acc
000B C0E0           3327               push acc
                    3328     ;   mov  psw,#0H        
000D 75D000         3329               mov  psw,#0H  
                    3330     ;   setb rs0     
0010 D2D3           3331               setb rs0     
                    3332     ;       setb rs1        
0012 D2D4           3333               setb rs1      
                    3334     ;   #pragma ENDASM 
                    3335     ;       
                    3336     ;       #pragma ASM
                    3337     ;       mov 0x1c,#0a5H
0014 751CA5         3338               mov 0x1c,#0a5H
                    3339     ;       dec 0x1c
0017 151C           3340               dec 0x1c
                    3341     ;   #pragma ENDASM      
                    3342     ;       if (R(3,4)!=0xa4) test_status = 0;
                    3343                             ; SOURCE LINE # 1001
0019 781C           3344             MOV     R0,#01CH
001B E6             3345             MOV     A,@R0
001C 64A4           3346             XRL     A,#0A4H
001E 6005           3347             JZ      ?C0241
0020 90007E         3348             MOV     DPTR,#07EH
0023 E4             3349             CLR     A
0024 F0             3350             MOVX    @DPTR,A
0025                3351     ?C0241:
                    3352     ;       if (AC!=0) test_status = 0;
                    3353                             ; SOURCE LINE # 1002
0025 30D605         3354             JNB     AC,?C0242
0028 90007E         3355             MOV     DPTR,#07EH
002B E4             3356             CLR     A
002C F0             3357             MOVX    @DPTR,A
002D                3358     ?C0242:
                    3359     ;       if (OV!=0) test_status = 0;
                    3360                             ; SOURCE LINE # 1003
002D 30D205         3361             JNB     OV,?C0243
0030 90007E         3362             MOV     DPTR,#07EH
0033 E4             3363             CLR     A
0034 F0             3364             MOVX    @DPTR,A
0035                3365     ?C0243:
                    3366     ;       if (CY!=0) test_status = 0;
                    3367                             ; SOURCE LINE # 1004
0035 30D705         3368             JNB     CY,?C0244
0038 90007E         3369             MOV     DPTR,#07EH
003B E4             3370             CLR     A
003C F0             3371             MOVX    @DPTR,A
003D                3372     ?C0244:
                    3373     ; 
                    3374     ;       
                    3375     ;       #pragma ASM 
                    3376     ;       pop acc
003D D0E0           3377               pop acc
                    3378     ;   pop psw     
003F D0D0           3379               pop psw       
                    3380     ;   #pragma ENDASM      
                    3381     ;   error();
                    3382                             ; SOURCE LINE # 1011
0041 020000   F     3383             LJMP    error
                    3384     ; END OF dec_di
                    3385     
                    3386     ; }
                    3387     ; 
                    3388     ; void dec_ri(void) {
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    53

                    3389     
----                3390             RSEG  ?PR?dec_ri?ARITHMETIC
0000                3391     dec_ri:
                    3392             USING   0
                    3393                             ; SOURCE LINE # 1014
                    3394     ;       printf("DEC_RI\n");
                    3395                             ; SOURCE LINE # 1015
0000 7BFF           3396             MOV     R3,#0FFH
0002 7A00     F     3397             MOV     R2,#HIGH (?SC_190)
0004 7900     F     3398             MOV     R1,#LOW (?SC_190)
0006 120000   F     3399             LCALL   _printf
                    3400     ;       #pragma ASM  
                    3401     ;       push psw
0009 C0D0           3402               push psw
                    3403     ;       push acc
000B C0E0           3404               push acc
                    3405     ;   mov  psw,#0H        
000D 75D000         3406               mov  psw,#0H  
                    3407     ;   setb rs0     
0010 D2D3           3408               setb rs0     
                    3409     ;       setb rs1        
0012 D2D4           3410               setb rs1      
                    3411     ;   #pragma ENDASM 
                    3412     ;       
                    3413     ;       #pragma ASM
                    3414     ;       mov 0x1c,#0a5H
0014 751CA5         3415               mov 0x1c,#0a5H
                    3416     ;       mov R1,#1cH
0017 791C           3417               mov R1,#1cH
                    3418     ;       dec @R1
0019 17             3419               dec @R1
                    3420     ;   #pragma ENDASM      
                    3421     ;       if (R(3,4)!=0xa4) test_status = 0;
                    3422                             ; SOURCE LINE # 1029
001A 781C           3423             MOV     R0,#01CH
001C E6             3424             MOV     A,@R0
001D 64A4           3425             XRL     A,#0A4H
001F 6005           3426             JZ      ?C0246
0021 90007E         3427             MOV     DPTR,#07EH
0024 E4             3428             CLR     A
0025 F0             3429             MOVX    @DPTR,A
0026                3430     ?C0246:
                    3431     ;       if (AC!=0) test_status = 0;
                    3432                             ; SOURCE LINE # 1030
0026 30D605         3433             JNB     AC,?C0247
0029 90007E         3434             MOV     DPTR,#07EH
002C E4             3435             CLR     A
002D F0             3436             MOVX    @DPTR,A
002E                3437     ?C0247:
                    3438     ;       if (OV!=0) test_status = 0;
                    3439                             ; SOURCE LINE # 1031
002E 30D205         3440             JNB     OV,?C0248
0031 90007E         3441             MOV     DPTR,#07EH
0034 E4             3442             CLR     A
0035 F0             3443             MOVX    @DPTR,A
0036                3444     ?C0248:
                    3445     ;       if (CY!=0) test_status = 0;
                    3446                             ; SOURCE LINE # 1032
0036 30D705         3447             JNB     CY,?C0249
0039 90007E         3448             MOV     DPTR,#07EH
003C E4             3449             CLR     A
003D F0             3450             MOVX    @DPTR,A
003E                3451     ?C0249:
                    3452     ; 
                    3453     ;       
                    3454     ;       #pragma ASM 
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    54

                    3455     ;       pop acc
003E D0E0           3456               pop acc
                    3457     ;   pop psw     
0040 D0D0           3458               pop psw       
                    3459     ;   #pragma ENDASM
                    3460     ;   error();  
                    3461                             ; SOURCE LINE # 1039
0042 020000   F     3462             LJMP    error
                    3463     ; END OF dec_ri
                    3464     
                    3465     ; }
                    3466     ; 
                    3467     ; void mult(void) {
                    3468     
----                3469             RSEG  ?PR?mult?ARITHMETIC
0000                3470     mult:
                    3471             USING   0
                    3472                             ; SOURCE LINE # 1042
                    3473     ;       printf("MULT\n");
                    3474                             ; SOURCE LINE # 1043
0000 7BFF           3475             MOV     R3,#0FFH
0002 7A00     F     3476             MOV     R2,#HIGH (?SC_198)
0004 7900     F     3477             MOV     R1,#LOW (?SC_198)
0006 120000   F     3478             LCALL   _printf
                    3479     ;       #pragma ASM  
                    3480     ;       push psw
0009 C0D0           3481               push psw
                    3482     ;       push acc
000B C0E0           3483               push acc
                    3484     ;   mov  psw,#0H        
000D 75D000         3485               mov  psw,#0H  
                    3486     ;   setb rs0     
0010 D2D3           3487               setb rs0     
                    3488     ;       setb rs1        
0012 D2D4           3489               setb rs1      
                    3490     ;   #pragma ENDASM 
                    3491     ;       
                    3492     ;       #pragma ASM
                    3493     ;       setb C
0014 D3             3494               setb C
                    3495     ;       mov acc,#08H
0015 75E008         3496               mov acc,#08H
                    3497     ;       mov 0xf0,#03H
0018 75F003         3498               mov 0xf0,#03H
                    3499     ;       mul AB
001B A4             3500               mul AB
                    3501     ;   #pragma ENDASM      
                    3502     ;       if (ACC!=0x18) test_status = 0;
                    3503                             ; SOURCE LINE # 1058
001C 6418           3504             XRL     A,#018H
001E 6005           3505             JZ      ?C0251
0020 90007E         3506             MOV     DPTR,#07EH
0023 E4             3507             CLR     A
0024 F0             3508             MOVX    @DPTR,A
0025                3509     ?C0251:
                    3510     ;       if (B!=0x0) test_status = 0;
                    3511                             ; SOURCE LINE # 1059
0025 E5F0           3512             MOV     A,B
0027 6005           3513             JZ      ?C0252
0029 90007E         3514             MOV     DPTR,#07EH
002C E4             3515             CLR     A
002D F0             3516             MOVX    @DPTR,A
002E                3517     ?C0252:
                    3518     ;       if (AC!=0) test_status = 0;
                    3519                             ; SOURCE LINE # 1060
002E 30D605         3520             JNB     AC,?C0253
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    55

0031 90007E         3521             MOV     DPTR,#07EH
0034 E4             3522             CLR     A
0035 F0             3523             MOVX    @DPTR,A
0036                3524     ?C0253:
                    3525     ;       if (OV!=0) test_status = 0;
                    3526                             ; SOURCE LINE # 1061
0036 30D205         3527             JNB     OV,?C0254
0039 90007E         3528             MOV     DPTR,#07EH
003C E4             3529             CLR     A
003D F0             3530             MOVX    @DPTR,A
003E                3531     ?C0254:
                    3532     ;       if (CY!=0) test_status = 0;
                    3533                             ; SOURCE LINE # 1062
003E 30D705         3534             JNB     CY,?C0255
0041 90007E         3535             MOV     DPTR,#07EH
0044 E4             3536             CLR     A
0045 F0             3537             MOVX    @DPTR,A
0046                3538     ?C0255:
                    3539     ; 
                    3540     ;       #pragma ASM
                    3541     ;       setb C
0046 D3             3542               setb C
                    3543     ;       mov acc,#0a8H
0047 75E0A8         3544               mov acc,#0a8H
                    3545     ;       mov 0xf0,#0efH
004A 75F0EF         3546               mov 0xf0,#0efH
                    3547     ;       mul AB
004D A4             3548               mul AB
                    3549     ;   #pragma ENDASM      
                    3550     ;       if (ACC!=0xd8) test_status = 0;
                    3551                             ; SOURCE LINE # 1070
004E 64D8           3552             XRL     A,#0D8H
0050 6005           3553             JZ      ?C0256
0052 90007E         3554             MOV     DPTR,#07EH
0055 E4             3555             CLR     A
0056 F0             3556             MOVX    @DPTR,A
0057                3557     ?C0256:
                    3558     ;       if (B!=0x9c) test_status = 0;
                    3559                             ; SOURCE LINE # 1071
0057 E5F0           3560             MOV     A,B
0059 649C           3561             XRL     A,#09CH
005B 6005           3562             JZ      ?C0257
005D 90007E         3563             MOV     DPTR,#07EH
0060 E4             3564             CLR     A
0061 F0             3565             MOVX    @DPTR,A
0062                3566     ?C0257:
                    3567     ;       if (AC!=0) test_status = 0;
                    3568                             ; SOURCE LINE # 1072
0062 30D605         3569             JNB     AC,?C0258
0065 90007E         3570             MOV     DPTR,#07EH
0068 E4             3571             CLR     A
0069 F0             3572             MOVX    @DPTR,A
006A                3573     ?C0258:
                    3574     ;       if (OV!=1) test_status = 0;
                    3575                             ; SOURCE LINE # 1073
006A 20D205         3576             JB      OV,?C0259
006D 90007E         3577             MOV     DPTR,#07EH
0070 E4             3578             CLR     A
0071 F0             3579             MOVX    @DPTR,A
0072                3580     ?C0259:
                    3581     ;       if (CY!=0) test_status = 0;
                    3582                             ; SOURCE LINE # 1074
0072 30D705         3583             JNB     CY,?C0260
0075 90007E         3584             MOV     DPTR,#07EH
0078 E4             3585             CLR     A
0079 F0             3586             MOVX    @DPTR,A
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    56

007A                3587     ?C0260:
                    3588     ;       
                    3589     ;       #pragma ASM 
                    3590     ;       pop acc
007A D0E0           3591               pop acc
                    3592     ;   pop psw     
007C D0D0           3593               pop psw       
                    3594     ;   #pragma ENDASM
                    3595     ;   error();  
                    3596                             ; SOURCE LINE # 1080
007E 020000   F     3597             LJMP    error
                    3598     ; END OF mult
                    3599     
                    3600     ; }
                    3601     ; 
                    3602     ; void divide(void) {
                    3603     
----                3604             RSEG  ?PR?divide?ARITHMETIC
0000                3605     divide:
                    3606             USING   0
                    3607                             ; SOURCE LINE # 1083
                    3608     ;       printf("DIVIDE\n");
                    3609                             ; SOURCE LINE # 1084
0000 7BFF           3610             MOV     R3,#0FFH
0002 7A00     F     3611             MOV     R2,#HIGH (?SC_204)
0004 7900     F     3612             MOV     R1,#LOW (?SC_204)
0006 120000   F     3613             LCALL   _printf
                    3614     ;       #pragma ASM  
                    3615     ;       push psw
0009 C0D0           3616               push psw
                    3617     ;       push acc
000B C0E0           3618               push acc
                    3619     ;   mov  psw,#0H        
000D 75D000         3620               mov  psw,#0H  
                    3621     ;   setb rs0     
0010 D2D3           3622               setb rs0     
                    3623     ;       setb rs1        
0012 D2D4           3624               setb rs1      
                    3625     ;   #pragma ENDASM 
                    3626     ;       
                    3627     ;       #pragma ASM
                    3628     ;       setb C
0014 D3             3629               setb C
                    3630     ;       setb OV
0015 D2D2           3631               setb OV
                    3632     ;       mov acc,#0fbH
0017 75E0FB         3633               mov acc,#0fbH
                    3634     ;       mov 0xf0,#12H
001A 75F012         3635               mov 0xf0,#12H
                    3636     ;       div AB
001D 84             3637               div AB
                    3638     ;   #pragma ENDASM      
                    3639     ;       if (ACC!=0xd) test_status = 0;
                    3640                             ; SOURCE LINE # 1100
001E 640D           3641             XRL     A,#0DH
0020 6005           3642             JZ      ?C0262
0022 90007E         3643             MOV     DPTR,#07EH
0025 E4             3644             CLR     A
0026 F0             3645             MOVX    @DPTR,A
0027                3646     ?C0262:
                    3647     ;       if (B!=0x11) test_status = 0;
                    3648                             ; SOURCE LINE # 1101
0027 E5F0           3649             MOV     A,B
0029 6411           3650             XRL     A,#011H
002B 6005           3651             JZ      ?C0263
002D 90007E         3652             MOV     DPTR,#07EH
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    57

0030 E4             3653             CLR     A
0031 F0             3654             MOVX    @DPTR,A
0032                3655     ?C0263:
                    3656     ;       if (AC!=0) test_status = 0;
                    3657                             ; SOURCE LINE # 1102
0032 30D605         3658             JNB     AC,?C0264
0035 90007E         3659             MOV     DPTR,#07EH
0038 E4             3660             CLR     A
0039 F0             3661             MOVX    @DPTR,A
003A                3662     ?C0264:
                    3663     ;       if (OV!=0) test_status = 0;
                    3664                             ; SOURCE LINE # 1103
003A 30D205         3665             JNB     OV,?C0265
003D 90007E         3666             MOV     DPTR,#07EH
0040 E4             3667             CLR     A
0041 F0             3668             MOVX    @DPTR,A
0042                3669     ?C0265:
                    3670     ;       if (CY!=0) test_status = 0;
                    3671                             ; SOURCE LINE # 1104
0042 30D705         3672             JNB     CY,?C0266
0045 90007E         3673             MOV     DPTR,#07EH
0048 E4             3674             CLR     A
0049 F0             3675             MOVX    @DPTR,A
004A                3676     ?C0266:
                    3677     ; 
                    3678     ;       #pragma ASM
                    3679     ;       setb C
004A D3             3680               setb C
                    3681     ;       mov acc,#0a8H
004B 75E0A8         3682               mov acc,#0a8H
                    3683     ;       mov 0xf0,#0H
004E 75F000         3684               mov 0xf0,#0H
                    3685     ;       div AB
0051 84             3686               div AB
                    3687     ;   #pragma ENDASM      
                    3688     ;       if (AC!=0) test_status = 0;
                    3689                             ; SOURCE LINE # 1112
0052 30D605         3690             JNB     AC,?C0267
0055 90007E         3691             MOV     DPTR,#07EH
0058 E4             3692             CLR     A
0059 F0             3693             MOVX    @DPTR,A
005A                3694     ?C0267:
                    3695     ;       if (OV!=1) test_status = 0;
                    3696                             ; SOURCE LINE # 1113
005A 20D205         3697             JB      OV,?C0268
005D 90007E         3698             MOV     DPTR,#07EH
0060 E4             3699             CLR     A
0061 F0             3700             MOVX    @DPTR,A
0062                3701     ?C0268:
                    3702     ;       if (CY!=0) test_status = 0;
                    3703                             ; SOURCE LINE # 1114
0062 30D705         3704             JNB     CY,?C0269
0065 90007E         3705             MOV     DPTR,#07EH
0068 E4             3706             CLR     A
0069 F0             3707             MOVX    @DPTR,A
006A                3708     ?C0269:
                    3709     ;       
                    3710     ;       #pragma ASM 
                    3711     ;       pop acc
006A D0E0           3712               pop acc
                    3713     ;   pop psw     
006C D0D0           3714               pop psw       
                    3715     ;   #pragma ENDASM
                    3716     ;   error();  
                    3717                             ; SOURCE LINE # 1120
006E 020000   F     3718             LJMP    error
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    58

                    3719     ; END OF divide
                    3720     
                    3721     ; }
                    3722     ; 
                    3723     ; void da_a(void) {
                    3724     
----                3725             RSEG  ?PR?da_a?ARITHMETIC
0000                3726     da_a:
                    3727             USING   0
                    3728                             ; SOURCE LINE # 1123
                    3729     ;       printf("DA\n");
                    3730                             ; SOURCE LINE # 1124
0000 7BFF           3731             MOV     R3,#0FFH
0002 7A00     F     3732             MOV     R2,#HIGH (?SC_212)
0004 7900     F     3733             MOV     R1,#LOW (?SC_212)
0006 120000   F     3734             LCALL   _printf
                    3735     ;       #pragma ASM  
                    3736     ;       push psw
0009 C0D0           3737               push psw
                    3738     ;       push acc
000B C0E0           3739               push acc
                    3740     ;   mov  psw,#0H        
000D 75D000         3741               mov  psw,#0H  
                    3742     ;   setb rs0     
0010 D2D3           3743               setb rs0     
                    3744     ;       setb rs1        
0012 D2D4           3745               setb rs1      
                    3746     ;   #pragma ENDASM 
                    3747     ;       
                    3748     ;       #pragma ASM
                    3749     ;       mov acc,#56H
0014 75E056         3750               mov acc,#56H
                    3751     ;       mov R3,#67H
0017 7B67           3752               mov R3,#67H
                    3753     ;       setb AC
0019 D2D6           3754               setb AC
                    3755     ;       setb C
001B D3             3756               setb C
                    3757     ;       addc A,R3
001C 3B             3758               addc A,R3
                    3759     ;       da A
001D D4             3760               da A
                    3761     ;   #pragma ENDASM      
                    3762     ;       if (ACC!=0x24) test_status = 0;
                    3763                             ; SOURCE LINE # 1141
001E 6424           3764             XRL     A,#024H
0020 6005           3765             JZ      ?C0271
0022 90007E         3766             MOV     DPTR,#07EH
0025 E4             3767             CLR     A
0026 F0             3768             MOVX    @DPTR,A
0027                3769     ?C0271:
                    3770     ;       if (AC!=0) test_status = 0;
                    3771                             ; SOURCE LINE # 1142
0027 30D605         3772             JNB     AC,?C0272
002A 90007E         3773             MOV     DPTR,#07EH
002D E4             3774             CLR     A
002E F0             3775             MOVX    @DPTR,A
002F                3776     ?C0272:
                    3777     ;       if (OV!=1) test_status = 0;
                    3778                             ; SOURCE LINE # 1143
002F 20D205         3779             JB      OV,?C0273
0032 90007E         3780             MOV     DPTR,#07EH
0035 E4             3781             CLR     A
0036 F0             3782             MOVX    @DPTR,A
0037                3783     ?C0273:
                    3784     ;       if (CY!=1) test_status = 0;
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    59

                    3785                             ; SOURCE LINE # 1144
0037 20D705         3786             JB      CY,?C0274
003A 90007E         3787             MOV     DPTR,#07EH
003D E4             3788             CLR     A
003E F0             3789             MOVX    @DPTR,A
003F                3790     ?C0274:
                    3791     ; 
                    3792     ;       #pragma ASM
                    3793     ;       mov acc,#30H
003F 75E030         3794               mov acc,#30H
                    3795     ;       add A,#99H
0042 2499           3796               add A,#99H
                    3797     ;       da A
0044 D4             3798               da A
                    3799     ;   #pragma ENDASM      
                    3800     ;       if (ACC!=0x29) test_status = 0;
                    3801                             ; SOURCE LINE # 1151
0045 6429           3802             XRL     A,#029H
0047 6005           3803             JZ      ?C0275
0049 90007E         3804             MOV     DPTR,#07EH
004C E4             3805             CLR     A
004D F0             3806             MOVX    @DPTR,A
004E                3807     ?C0275:
                    3808     ;       if (AC!=0) test_status = 0;
                    3809                             ; SOURCE LINE # 1152
004E 30D605         3810             JNB     AC,?C0276
0051 90007E         3811             MOV     DPTR,#07EH
0054 E4             3812             CLR     A
0055 F0             3813             MOVX    @DPTR,A
0056                3814     ?C0276:
                    3815     ;       if (OV!=0) test_status = 0;
                    3816                             ; SOURCE LINE # 1153
0056 30D205         3817             JNB     OV,?C0277
0059 90007E         3818             MOV     DPTR,#07EH
005C E4             3819             CLR     A
005D F0             3820             MOVX    @DPTR,A
005E                3821     ?C0277:
                    3822     ;       if (CY!=1) test_status = 0;
                    3823                             ; SOURCE LINE # 1154
005E 20D705         3824             JB      CY,?C0278
0061 90007E         3825             MOV     DPTR,#07EH
0064 E4             3826             CLR     A
0065 F0             3827             MOVX    @DPTR,A
0066                3828     ?C0278:
                    3829     ; 
                    3830     ; 
                    3831     ;       #pragma ASM 
                    3832     ;       pop acc
0066 D0E0           3833               pop acc
                    3834     ;   pop psw     
0068 D0D0           3835               pop psw       
                    3836     ;   #pragma ENDASM
                    3837     ;   error();  
                    3838                             ; SOURCE LINE # 1161
006A 020000   F     3839             LJMP    error
                    3840     ; END OF da_a
                    3841     
                    3842             END
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    60

SYMBOL TABLE LISTING
------ ----- -------


N A M E                   T Y P E  V A L U E   ATTRIBUTES

?C0001 . . . . . . . . .  C ADDR   0023H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0002 . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0003 . . . . . . . . .  C ADDR   0033H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0004 . . . . . . . . .  C ADDR   003BH   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0005 . . . . . . . . .  C ADDR   004CH   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0006 . . . . . . . . .  C ADDR   0054H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0007 . . . . . . . . .  C ADDR   005CH   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0008 . . . . . . . . .  C ADDR   0064H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0009 . . . . . . . . .  C ADDR   0075H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0010 . . . . . . . . .  C ADDR   007DH   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0011 . . . . . . . . .  C ADDR   0085H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0012 . . . . . . . . .  C ADDR   008DH   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0013 . . . . . . . . .  C ADDR   00A0H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0014 . . . . . . . . .  C ADDR   00A8H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0015 . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0016 . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
?C0018 . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0019 . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0020 . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0021 . . . . . . . . .  C ADDR   003CH   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0022 . . . . . . . . .  C ADDR   004EH   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0023 . . . . . . . . .  C ADDR   0056H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0024 . . . . . . . . .  C ADDR   005EH   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0025 . . . . . . . . .  C ADDR   0066H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0026 . . . . . . . . .  C ADDR   0078H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0027 . . . . . . . . .  C ADDR   0080H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0028 . . . . . . . . .  C ADDR   0088H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0029 . . . . . . . . .  C ADDR   0090H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0030 . . . . . . . . .  C ADDR   00A4H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0031 . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0032 . . . . . . . . .  C ADDR   00B4H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0033 . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?ADD_A_DI?ARITHMETIC
?C0035 . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0036 . . . . . . . . .  C ADDR   002DH   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0037 . . . . . . . . .  C ADDR   0035H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0038 . . . . . . . . .  C ADDR   003DH   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0039 . . . . . . . . .  C ADDR   0050H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0040 . . . . . . . . .  C ADDR   0058H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0041 . . . . . . . . .  C ADDR   0060H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0042 . . . . . . . . .  C ADDR   0068H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0043 . . . . . . . . .  C ADDR   007BH   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0044 . . . . . . . . .  C ADDR   0083H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0045 . . . . . . . . .  C ADDR   008BH   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0046 . . . . . . . . .  C ADDR   0093H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0047 . . . . . . . . .  C ADDR   00A8H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0048 . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0049 . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0050 . . . . . . . . .  C ADDR   00C0H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
?C0052 . . . . . . . . .  C ADDR   0022H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0053 . . . . . . . . .  C ADDR   002AH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0054 . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0055 . . . . . . . . .  C ADDR   003AH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0056 . . . . . . . . .  C ADDR   004AH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0057 . . . . . . . . .  C ADDR   0052H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0058 . . . . . . . . .  C ADDR   005AH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0059 . . . . . . . . .  C ADDR   0062H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0060 . . . . . . . . .  C ADDR   0072H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0061 . . . . . . . . .  C ADDR   007AH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0062 . . . . . . . . .  C ADDR   0082H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0063 . . . . . . . . .  C ADDR   008AH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    61

?C0064 . . . . . . . . .  C ADDR   009CH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0065 . . . . . . . . .  C ADDR   00A4H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0066 . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0067 . . . . . . . . .  C ADDR   00B4H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
?C0069 . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0070 . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0071 . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0072 . . . . . . . . .  C ADDR   003CH   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0073 . . . . . . . . .  C ADDR   004EH   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0074 . . . . . . . . .  C ADDR   0056H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0075 . . . . . . . . .  C ADDR   005EH   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0076 . . . . . . . . .  C ADDR   0066H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0077 . . . . . . . . .  C ADDR   0078H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0078 . . . . . . . . .  C ADDR   0080H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0079 . . . . . . . . .  C ADDR   0088H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0080 . . . . . . . . .  C ADDR   0090H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0081 . . . . . . . . .  C ADDR   00A4H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0082 . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0083 . . . . . . . . .  C ADDR   00B4H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0084 . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
?C0086 . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0087 . . . . . . . . .  C ADDR   002DH   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0088 . . . . . . . . .  C ADDR   0035H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0089 . . . . . . . . .  C ADDR   003DH   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0090 . . . . . . . . .  C ADDR   0050H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0091 . . . . . . . . .  C ADDR   0058H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0092 . . . . . . . . .  C ADDR   0060H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0093 . . . . . . . . .  C ADDR   0068H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0094 . . . . . . . . .  C ADDR   007BH   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0095 . . . . . . . . .  C ADDR   0083H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0096 . . . . . . . . .  C ADDR   008BH   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0097 . . . . . . . . .  C ADDR   0093H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0098 . . . . . . . . .  C ADDR   00A8H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0099 . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0100 . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0101 . . . . . . . . .  C ADDR   00C0H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
?C0103 . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0104 . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0105 . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0106 . . . . . . . . .  C ADDR   003EH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0107 . . . . . . . . .  C ADDR   0052H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0108 . . . . . . . . .  C ADDR   005AH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0109 . . . . . . . . .  C ADDR   0062H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0110 . . . . . . . . .  C ADDR   006AH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0111 . . . . . . . . .  C ADDR   007EH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0112 . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0113 . . . . . . . . .  C ADDR   008EH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0114 . . . . . . . . .  C ADDR   0096H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0115 . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0116 . . . . . . . . .  C ADDR   00B4H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0117 . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0118 . . . . . . . . .  C ADDR   00C4H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
?C0120 . . . . . . . . .  C ADDR   0023H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0121 . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0122 . . . . . . . . .  C ADDR   0033H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0123 . . . . . . . . .  C ADDR   003BH   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0124 . . . . . . . . .  C ADDR   004CH   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0125 . . . . . . . . .  C ADDR   0054H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0126 . . . . . . . . .  C ADDR   005CH   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0127 . . . . . . . . .  C ADDR   0064H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0128 . . . . . . . . .  C ADDR   0075H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0129 . . . . . . . . .  C ADDR   007DH   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0130 . . . . . . . . .  C ADDR   0085H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0131 . . . . . . . . .  C ADDR   008DH   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0132 . . . . . . . . .  C ADDR   00A0H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0133 . . . . . . . . .  C ADDR   00A8H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    62

?C0134 . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0135 . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
?C0137 . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0138 . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0139 . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0140 . . . . . . . . .  C ADDR   003CH   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0141 . . . . . . . . .  C ADDR   004EH   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0142 . . . . . . . . .  C ADDR   0056H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0143 . . . . . . . . .  C ADDR   005EH   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0144 . . . . . . . . .  C ADDR   0066H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0145 . . . . . . . . .  C ADDR   0078H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0146 . . . . . . . . .  C ADDR   0080H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0147 . . . . . . . . .  C ADDR   0088H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0148 . . . . . . . . .  C ADDR   0090H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0149 . . . . . . . . .  C ADDR   00A4H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0150 . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0151 . . . . . . . . .  C ADDR   00B4H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0152 . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
?C0154 . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0155 . . . . . . . . .  C ADDR   002DH   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0156 . . . . . . . . .  C ADDR   0035H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0157 . . . . . . . . .  C ADDR   003DH   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0158 . . . . . . . . .  C ADDR   0050H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0159 . . . . . . . . .  C ADDR   0058H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0160 . . . . . . . . .  C ADDR   0060H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0161 . . . . . . . . .  C ADDR   0068H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0162 . . . . . . . . .  C ADDR   007BH   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0163 . . . . . . . . .  C ADDR   0083H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0164 . . . . . . . . .  C ADDR   008BH   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0165 . . . . . . . . .  C ADDR   0093H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0166 . . . . . . . . .  C ADDR   00A8H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0167 . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0168 . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0169 . . . . . . . . .  C ADDR   00C0H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
?C0171 . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0172 . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0173 . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0174 . . . . . . . . .  C ADDR   003EH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0175 . . . . . . . . .  C ADDR   0052H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0176 . . . . . . . . .  C ADDR   005AH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0177 . . . . . . . . .  C ADDR   0062H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0178 . . . . . . . . .  C ADDR   006AH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0179 . . . . . . . . .  C ADDR   007EH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0180 . . . . . . . . .  C ADDR   0086H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0181 . . . . . . . . .  C ADDR   008EH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0182 . . . . . . . . .  C ADDR   0096H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0183 . . . . . . . . .  C ADDR   00ACH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0184 . . . . . . . . .  C ADDR   00B4H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0185 . . . . . . . . .  C ADDR   00BCH   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0186 . . . . . . . . .  C ADDR   00C4H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
?C0188 . . . . . . . . .  C ADDR   0023H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0189 . . . . . . . . .  C ADDR   002BH   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0190 . . . . . . . . .  C ADDR   0033H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0191 . . . . . . . . .  C ADDR   003BH   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0192 . . . . . . . . .  C ADDR   004CH   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0193 . . . . . . . . .  C ADDR   0054H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0194 . . . . . . . . .  C ADDR   005CH   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0195 . . . . . . . . .  C ADDR   0064H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0196 . . . . . . . . .  C ADDR   0075H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0197 . . . . . . . . .  C ADDR   007DH   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0198 . . . . . . . . .  C ADDR   0085H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0199 . . . . . . . . .  C ADDR   008DH   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0200 . . . . . . . . .  C ADDR   00A0H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0201 . . . . . . . . .  C ADDR   00A8H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0202 . . . . . . . . .  C ADDR   00B0H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
?C0203 . . . . . . . . .  C ADDR   00B8H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    63

?C0205 . . . . . . . . .  C ADDR   0021H   R   SEG=?PR?INC_A?ARITHMETIC
?C0206 . . . . . . . . .  C ADDR   0029H   R   SEG=?PR?INC_A?ARITHMETIC
?C0207 . . . . . . . . .  C ADDR   0031H   R   SEG=?PR?INC_A?ARITHMETIC
?C0208 . . . . . . . . .  C ADDR   0039H   R   SEG=?PR?INC_A?ARITHMETIC
?C0210 . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?INC_RN?ARITHMETIC
?C0211 . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?INC_RN?ARITHMETIC
?C0212 . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?INC_RN?ARITHMETIC
?C0213 . . . . . . . . .  C ADDR   003CH   R   SEG=?PR?INC_RN?ARITHMETIC
?C0215 . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?INC_DI?ARITHMETIC
?C0216 . . . . . . . . .  C ADDR   002DH   R   SEG=?PR?INC_DI?ARITHMETIC
?C0217 . . . . . . . . .  C ADDR   0035H   R   SEG=?PR?INC_DI?ARITHMETIC
?C0218 . . . . . . . . .  C ADDR   003DH   R   SEG=?PR?INC_DI?ARITHMETIC
?C0220 . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?INC_RI?ARITHMETIC
?C0221 . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?INC_RI?ARITHMETIC
?C0222 . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?INC_RI?ARITHMETIC
?C0223 . . . . . . . . .  C ADDR   003EH   R   SEG=?PR?INC_RI?ARITHMETIC
?C0225 . . . . . . . . .  C ADDR   0023H   R   SEG=?PR?INC_DP?ARITHMETIC
?C0226 . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?INC_DP?ARITHMETIC
?C0227 . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?INC_DP?ARITHMETIC
?C0228 . . . . . . . . .  C ADDR   003EH   R   SEG=?PR?INC_DP?ARITHMETIC
?C0229 . . . . . . . . .  C ADDR   0046H   R   SEG=?PR?INC_DP?ARITHMETIC
?C0231 . . . . . . . . .  C ADDR   0021H   R   SEG=?PR?DEC_A?ARITHMETIC
?C0232 . . . . . . . . .  C ADDR   0029H   R   SEG=?PR?DEC_A?ARITHMETIC
?C0233 . . . . . . . . .  C ADDR   0031H   R   SEG=?PR?DEC_A?ARITHMETIC
?C0234 . . . . . . . . .  C ADDR   0039H   R   SEG=?PR?DEC_A?ARITHMETIC
?C0236 . . . . . . . . .  C ADDR   0024H   R   SEG=?PR?DEC_RN?ARITHMETIC
?C0237 . . . . . . . . .  C ADDR   002CH   R   SEG=?PR?DEC_RN?ARITHMETIC
?C0238 . . . . . . . . .  C ADDR   0034H   R   SEG=?PR?DEC_RN?ARITHMETIC
?C0239 . . . . . . . . .  C ADDR   003CH   R   SEG=?PR?DEC_RN?ARITHMETIC
?C0241 . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?DEC_DI?ARITHMETIC
?C0242 . . . . . . . . .  C ADDR   002DH   R   SEG=?PR?DEC_DI?ARITHMETIC
?C0243 . . . . . . . . .  C ADDR   0035H   R   SEG=?PR?DEC_DI?ARITHMETIC
?C0244 . . . . . . . . .  C ADDR   003DH   R   SEG=?PR?DEC_DI?ARITHMETIC
?C0246 . . . . . . . . .  C ADDR   0026H   R   SEG=?PR?DEC_RI?ARITHMETIC
?C0247 . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?DEC_RI?ARITHMETIC
?C0248 . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?DEC_RI?ARITHMETIC
?C0249 . . . . . . . . .  C ADDR   003EH   R   SEG=?PR?DEC_RI?ARITHMETIC
?C0251 . . . . . . . . .  C ADDR   0025H   R   SEG=?PR?MULT?ARITHMETIC
?C0252 . . . . . . . . .  C ADDR   002EH   R   SEG=?PR?MULT?ARITHMETIC
?C0253 . . . . . . . . .  C ADDR   0036H   R   SEG=?PR?MULT?ARITHMETIC
?C0254 . . . . . . . . .  C ADDR   003EH   R   SEG=?PR?MULT?ARITHMETIC
?C0255 . . . . . . . . .  C ADDR   0046H   R   SEG=?PR?MULT?ARITHMETIC
?C0256 . . . . . . . . .  C ADDR   0057H   R   SEG=?PR?MULT?ARITHMETIC
?C0257 . . . . . . . . .  C ADDR   0062H   R   SEG=?PR?MULT?ARITHMETIC
?C0258 . . . . . . . . .  C ADDR   006AH   R   SEG=?PR?MULT?ARITHMETIC
?C0259 . . . . . . . . .  C ADDR   0072H   R   SEG=?PR?MULT?ARITHMETIC
?C0260 . . . . . . . . .  C ADDR   007AH   R   SEG=?PR?MULT?ARITHMETIC
?C0262 . . . . . . . . .  C ADDR   0027H   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0263 . . . . . . . . .  C ADDR   0032H   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0264 . . . . . . . . .  C ADDR   003AH   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0265 . . . . . . . . .  C ADDR   0042H   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0266 . . . . . . . . .  C ADDR   004AH   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0267 . . . . . . . . .  C ADDR   005AH   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0268 . . . . . . . . .  C ADDR   0062H   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0269 . . . . . . . . .  C ADDR   006AH   R   SEG=?PR?DIVIDE?ARITHMETIC
?C0271 . . . . . . . . .  C ADDR   0027H   R   SEG=?PR?DA_A?ARITHMETIC
?C0272 . . . . . . . . .  C ADDR   002FH   R   SEG=?PR?DA_A?ARITHMETIC
?C0273 . . . . . . . . .  C ADDR   0037H   R   SEG=?PR?DA_A?ARITHMETIC
?C0274 . . . . . . . . .  C ADDR   003FH   R   SEG=?PR?DA_A?ARITHMETIC
?C0275 . . . . . . . . .  C ADDR   004EH   R   SEG=?PR?DA_A?ARITHMETIC
?C0276 . . . . . . . . .  C ADDR   0056H   R   SEG=?PR?DA_A?ARITHMETIC
?C0277 . . . . . . . . .  C ADDR   005EH   R   SEG=?PR?DA_A?ARITHMETIC
?C0278 . . . . . . . . .  C ADDR   0066H   R   SEG=?PR?DA_A?ARITHMETIC
?CO?ARITHMETIC . . . . .  C SEG    00D8H       REL=UNIT
?PR?ADDC_A_DA?ARITHMETIC  C SEG    00C1H       REL=UNIT
?PR?ADDC_A_DI?ARITHMETIC  C SEG    00C9H       REL=UNIT
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    64

?PR?ADDC_A_RI?ARITHMETIC  C SEG    00CDH       REL=UNIT
?PR?ADDC_A_RN?ARITHMETIC  C SEG    00C5H       REL=UNIT
?PR?ADD_A_DA?ARITHMETIC.  C SEG    00BDH       REL=UNIT
?PR?ADD_A_DI?ARITHMETIC.  C SEG    00C5H       REL=UNIT
?PR?ADD_A_RI?ARITHMETIC.  C SEG    00C9H       REL=UNIT
?PR?ADD_A_RN?ARITHMETIC.  C SEG    00C1H       REL=UNIT
?PR?DA_A?ARITHMETIC. . .  C SEG    006DH       REL=UNIT
?PR?DEC_A?ARITHMETIC . .  C SEG    0040H       REL=UNIT
?PR?DEC_DI?ARITHMETIC. .  C SEG    0044H       REL=UNIT
?PR?DEC_RI?ARITHMETIC. .  C SEG    0045H       REL=UNIT
?PR?DEC_RN?ARITHMETIC. .  C SEG    0043H       REL=UNIT
?PR?DIVIDE?ARITHMETIC. .  C SEG    0071H       REL=UNIT
?PR?INC_A?ARITHMETIC . .  C SEG    0040H       REL=UNIT
?PR?INC_DI?ARITHMETIC. .  C SEG    0044H       REL=UNIT
?PR?INC_DP?ARITHMETIC. .  C SEG    004DH       REL=UNIT
?PR?INC_RI?ARITHMETIC. .  C SEG    0045H       REL=UNIT
?PR?INC_RN?ARITHMETIC. .  C SEG    0043H       REL=UNIT
?PR?MULT?ARITHMETIC. . .  C SEG    0081H       REL=UNIT
?PR?SUBB_A_DA?ARITHMETIC  C SEG    00C1H       REL=UNIT
?PR?SUBB_A_DI?ARITHMETIC  C SEG    00C9H       REL=UNIT
?PR?SUBB_A_RI?ARITHMETIC  C SEG    00CDH       REL=UNIT
?PR?SUBB_A_RN?ARITHMETIC  C SEG    00C5H       REL=UNIT
?SC_0. . . . . . . . . .  C ADDR   0000H   R   SEG=?CO?ARITHMETIC
?SC_10 . . . . . . . . .  C ADDR   000AH   R   SEG=?CO?ARITHMETIC
?SC_106. . . . . . . . .  C ADDR   006AH   R   SEG=?CO?ARITHMETIC
?SC_117. . . . . . . . .  C ADDR   0075H   R   SEG=?CO?ARITHMETIC
?SC_128. . . . . . . . .  C ADDR   0080H   R   SEG=?CO?ARITHMETIC
?SC_135. . . . . . . . .  C ADDR   0087H   R   SEG=?CO?ARITHMETIC
?SC_143. . . . . . . . .  C ADDR   008FH   R   SEG=?CO?ARITHMETIC
?SC_151. . . . . . . . .  C ADDR   0097H   R   SEG=?CO?ARITHMETIC
?SC_159. . . . . . . . .  C ADDR   009FH   R   SEG=?CO?ARITHMETIC
?SC_167. . . . . . . . .  C ADDR   00A7H   R   SEG=?CO?ARITHMETIC
?SC_174. . . . . . . . .  C ADDR   00AEH   R   SEG=?CO?ARITHMETIC
?SC_182. . . . . . . . .  C ADDR   00B6H   R   SEG=?CO?ARITHMETIC
?SC_190. . . . . . . . .  C ADDR   00BEH   R   SEG=?CO?ARITHMETIC
?SC_198. . . . . . . . .  C ADDR   00C6H   R   SEG=?CO?ARITHMETIC
?SC_20 . . . . . . . . .  C ADDR   0014H   R   SEG=?CO?ARITHMETIC
?SC_204. . . . . . . . .  C ADDR   00CCH   R   SEG=?CO?ARITHMETIC
?SC_212. . . . . . . . .  C ADDR   00D4H   R   SEG=?CO?ARITHMETIC
?SC_30 . . . . . . . . .  C ADDR   001EH   R   SEG=?CO?ARITHMETIC
?SC_40 . . . . . . . . .  C ADDR   0028H   R   SEG=?CO?ARITHMETIC
?SC_51 . . . . . . . . .  C ADDR   0033H   R   SEG=?CO?ARITHMETIC
?SC_62 . . . . . . . . .  C ADDR   003EH   R   SEG=?CO?ARITHMETIC
?SC_73 . . . . . . . . .  C ADDR   0049H   R   SEG=?CO?ARITHMETIC
?SC_84 . . . . . . . . .  C ADDR   0054H   R   SEG=?CO?ARITHMETIC
?SC_95 . . . . . . . . .  C ADDR   005FH   R   SEG=?CO?ARITHMETIC
?_PRINTF?BYTE. . . . . .  D ADDR   -----       EXT
AC . . . . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . . . . .  D ADDR   00E0H   A   
ADDC_A_DA. . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADDC_A_DA?ARITHMETIC
ADDC_A_DI. . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADDC_A_DI?ARITHMETIC
ADDC_A_RI. . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADDC_A_RI?ARITHMETIC
ADDC_A_RN. . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADDC_A_RN?ARITHMETIC
ADD_A_DA . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADD_A_DA?ARITHMETIC
ADD_A_DI . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADD_A_DI?ARITHMETIC
ADD_A_RI . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADD_A_RI?ARITHMETIC
ADD_A_RN . . . . . . . .  C ADDR   0000H   R   SEG=?PR?ADD_A_RN?ARITHMETIC
ARITHMETIC . . . . . . .  N NUMB   -----       
B. . . . . . . . . . . .  D ADDR   00F0H   A   
CP_RL2 . . . . . . . . .  B ADDR   00C8H.0 A   
CY . . . . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . . . . .  B ADDR   00C8H.1 A   
DA_A . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?DA_A?ARITHMETIC
DEC_A. . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?DEC_A?ARITHMETIC
DEC_DI . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?DEC_DI?ARITHMETIC
DEC_RI . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?DEC_RI?ARITHMETIC
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    65

DEC_RN . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?DEC_RN?ARITHMETIC
DIVIDE . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?DIVIDE?ARITHMETIC
DPH. . . . . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . . . . .  B ADDR   00A8H.7 A   
ERROR. . . . . . . . . .  C ADDR   -----       EXT
ES . . . . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . . . . .  B ADDR   00D0H.5 A   
IE . . . . . . . . . . .  D ADDR   00A8H   A   
IE0. . . . . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . . . . .  B ADDR   0088H.3 A   
INC_A. . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INC_A?ARITHMETIC
INC_DI . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INC_DI?ARITHMETIC
INC_DP . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INC_DP?ARITHMETIC
INC_RI . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INC_RI?ARITHMETIC
INC_RN . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?INC_RN?ARITHMETIC
INT0 . . . . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . . . . .  B ADDR   00B0H.3 A   
IP . . . . . . . . . . .  D ADDR   00B8H   A   
IT0. . . . . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . . . . .  B ADDR   0088H.2 A   
MULT . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?MULT?ARITHMETIC
OV . . . . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . . . . .  D ADDR   00B0H   A   
PCON . . . . . . . . . .  D ADDR   0087H   A   
PS . . . . . . . . . . .  B ADDR   00B8H.4 A   
PSW. . . . . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . . . . .  B ADDR   00B8H.1 A   
PT1. . . . . . . . . . .  B ADDR   00B8H.3 A   
PT2. . . . . . . . . . .  B ADDR   00B8H.5 A   
PX0. . . . . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . . . . .  B ADDR   00B8H.2 A   
RB8. . . . . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . . . . .  B ADDR   00B0H.7 A   
REN. . . . . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . . . . .  B ADDR   00B0H.0 A   
SBUF . . . . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . . . . .  D ADDR   0098H   A   
SM0. . . . . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . . . . .  D ADDR   0081H   A   
SUBB_A_DA. . . . . . . .  C ADDR   0000H   R   SEG=?PR?SUBB_A_DA?ARITHMETIC
SUBB_A_DI. . . . . . . .  C ADDR   0000H   R   SEG=?PR?SUBB_A_DI?ARITHMETIC
SUBB_A_RI. . . . . . . .  C ADDR   0000H   R   SEG=?PR?SUBB_A_RI?ARITHMETIC
SUBB_A_RN. . . . . . . .  C ADDR   0000H   R   SEG=?PR?SUBB_A_RN?ARITHMETIC
T0 . . . . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . . . . .  B ADDR   00B0H.5 A   
T2 . . . . . . . . . . .  B ADDR   0090H.0 A   
A51 MACRO ASSEMBLER  ARITHMETIC                                                           07/21/2014 16:39:34 PAGE    66

T2CON. . . . . . . . . .  D ADDR   00C8H   A   
T2EX . . . . . . . . . .  B ADDR   0090H.1 A   
TB8. . . . . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . . . . .  B ADDR   00B0H.1 A   
WR . . . . . . . . . . .  B ADDR   00B0H.6 A   
_PRINTF. . . . . . . . .  C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
